[{"_id": "649c00cae61a96675bcdf6db", "mode": "staged", "originalfile": "/FileStore/platform/extra/tempFile1687945407.csv", "in": [], "out": ["649c00cae61a96675bcdf6dc"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "CustomerChurn_HDFS", "comment": "", "pipeline_id": "649c00cae61a96675bcdf6d8", "sub_type": "HDFS", "stage_type": "source", "stage_attributes": {"url": "/FileStore/platform/extra/tempFile1687945407.csv", "filename": "tempFile1687945407.csv", "delimiter": ",", "file_type": "Delimeted", "dbfs_token": "", "dbfs_domain": "", "is_header": "Use Header Line", "server_url": "/numtraPlatform/NumtraPlatformV3/uploads/platform/"}, "status": "new", "position": {"x": -80, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/source/hdfs-source.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "source", "text": "HDFS", "slug": "hdfs", "fontFamily": "Roboto Condensed", "fontWeight": "Normal", "mode": "manual"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"url": "", "file_type": "", "dbfs_token": "", "dbfs_domain": "", "delimiter": "", "is_header": "Use Header Line"}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "3728edb5-ec63-468b-9cf0-eca3719e7fe5", "original_schema": [{"inherited": true, "checked": true, "field": "CustomerChurn[customerID]", "alias": "CustomerChurn[customerID]", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "CustomerChurn[gender]", "alias": "CustomerChurn[gender]", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "CustomerChurn[SeniorCitizen]", "alias": "CustomerChurn[SeniorCitizen]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "CustomerChurn[Partner]", "alias": "CustomerChurn[Partner]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "CustomerChurn[Dependents]", "alias": "CustomerChurn[Dependents]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "CustomerChurn[tenure]", "alias": "CustomerChurn[tenure]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "CustomerChurn[PhoneService]", "alias": "CustomerChurn[PhoneService]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "CustomerChurn[MultipleLines]", "alias": "CustomerChurn[MultipleLines]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "CustomerChurn[InternetService]", "alias": "CustomerChurn[InternetService]", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineSecurity]", "alias": "CustomerChurn[OnlineSecurity]", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineBackup]", "alias": "CustomerChurn[OnlineBackup]", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "CustomerChurn[DeviceProtection]", "alias": "CustomerChurn[DeviceProtection]", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "CustomerChurn[TechSupport]", "alias": "CustomerChurn[TechSupport]", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingTV]", "alias": "CustomerChurn[StreamingTV]", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingMovies]", "alias": "CustomerChurn[StreamingMovies]", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "CustomerChurn[Contract]", "alias": "CustomerChurn[Contract]", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaperlessBilling]", "alias": "CustomerChurn[PaperlessBilling]", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaymentMethod]", "alias": "CustomerChurn[PaymentMethod]", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "CustomerChurn[MonthlyCharges]", "alias": "CustomerChurn[MonthlyCharges]", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "CustomerChurn[TotalCharges]", "alias": "CustomerChurn[TotalCharges]", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "CustomerChurn[Churn]", "alias": "CustomerChurn[Churn]", "type": "numeric", "position": 20}], "actual_schema": [{"inherited": true, "checked": true, "field": "CustomerChurn[customerID]", "alias": "CustomerChurn[customerID]", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "CustomerChurn[gender]", "alias": "CustomerChurn[gender]", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "CustomerChurn[SeniorCitizen]", "alias": "CustomerChurn[SeniorCitizen]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "CustomerChurn[Partner]", "alias": "CustomerChurn[Partner]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "CustomerChurn[Dependents]", "alias": "CustomerChurn[Dependents]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "CustomerChurn[tenure]", "alias": "CustomerChurn[tenure]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "CustomerChurn[PhoneService]", "alias": "CustomerChurn[PhoneService]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "CustomerChurn[MultipleLines]", "alias": "CustomerChurn[MultipleLines]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "CustomerChurn[InternetService]", "alias": "CustomerChurn[InternetService]", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineSecurity]", "alias": "CustomerChurn[OnlineSecurity]", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineBackup]", "alias": "CustomerChurn[OnlineBackup]", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "CustomerChurn[DeviceProtection]", "alias": "CustomerChurn[DeviceProtection]", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "CustomerChurn[TechSupport]", "alias": "CustomerChurn[TechSupport]", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingTV]", "alias": "CustomerChurn[StreamingTV]", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingMovies]", "alias": "CustomerChurn[StreamingMovies]", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "CustomerChurn[Contract]", "alias": "CustomerChurn[Contract]", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaperlessBilling]", "alias": "CustomerChurn[PaperlessBilling]", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaymentMethod]", "alias": "CustomerChurn[PaymentMethod]", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "CustomerChurn[MonthlyCharges]", "alias": "CustomerChurn[MonthlyCharges]", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "CustomerChurn[TotalCharges]", "alias": "CustomerChurn[TotalCharges]", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "CustomerChurn[Churn]", "alias": "CustomerChurn[Churn]", "type": "numeric", "position": 20}], "selected_schema": [], "created_at": "2023-06-28 09:43:38.321000", "joinSchema": [], "updated_at": "2023-06-28 09:43:39.051000", "__v": 0, "stage_runningstate": "executed", "datacache": 0, "originalcount": 7043, "sampleData": [{"CustomerChurn[customerID]": "8000-REIQB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.95, "CustomerChurn[TotalCharges]": 69.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0151-ONTOV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.9, "CustomerChurn[TotalCharges]": 70.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5542-TBBWB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.9, "CustomerChurn[TotalCharges]": 69.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7665-TOALD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.6, "CustomerChurn[TotalCharges]": 69.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0515-YPMCW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.45, "CustomerChurn[TotalCharges]": 70.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6653-CBBOM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.3, "CustomerChurn[TotalCharges]": 70.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3244-DCJWY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.25, "CustomerChurn[TotalCharges]": 70.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1447-GIQMR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.15, "CustomerChurn[TotalCharges]": 69.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2446-PLQVO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.3, "CustomerChurn[TotalCharges]": 70.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6185-TASNN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 46.3, "CustomerChurn[TotalCharges]": 46.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7825-GKXMW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.8, "CustomerChurn[TotalCharges]": 45.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7359-PTSXY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.75, "CustomerChurn[TotalCharges]": 45.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8180-AKMJV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 44.55, "CustomerChurn[TotalCharges]": 44.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2275-RBYQS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.4, "CustomerChurn[TotalCharges]": 45.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1963-SVUCV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.3, "CustomerChurn[TotalCharges]": 45.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0661-XEYAN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.8, "CustomerChurn[TotalCharges]": 25.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0248-IPDFW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.1, "CustomerChurn[TotalCharges]": 50.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9907-SWKKF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.05, "CustomerChurn[TotalCharges]": 25.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2103-ZRXFN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.75, "CustomerChurn[TotalCharges]": 50.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1334-FJSVR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.25, "CustomerChurn[TotalCharges]": 24.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0616-ATFGB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.05, "CustomerChurn[TotalCharges]": 25.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3091-FYHKI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.45, "CustomerChurn[TotalCharges]": 35.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0495-RVCBF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.7, "CustomerChurn[TotalCharges]": 79.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6086-ESGRL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 80.15, "CustomerChurn[TotalCharges]": 80.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5275-SQEIZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 80.85, "CustomerChurn[TotalCharges]": 80.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6629-CZTTH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.7, "CustomerChurn[TotalCharges]": 55.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2868-MZAGQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.25, "CustomerChurn[TotalCharges]": 79.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2867-UIMSS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.5, "CustomerChurn[TotalCharges]": 80.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2232-DMLXU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.2, "CustomerChurn[TotalCharges]": 55.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2514-GINMM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.5, "CustomerChurn[TotalCharges]": 79.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5054-IEXZT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.35, "CustomerChurn[TotalCharges]": 75.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1845-ZLLIG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.15, "CustomerChurn[TotalCharges]": 50.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1406-PUQVY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.9, "CustomerChurn[TotalCharges]": 49.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2254-DLXRI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.15, "CustomerChurn[TotalCharges]": 79.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6907-FLBER", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.3, "CustomerChurn[TotalCharges]": 54.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5073-WXOYN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.8, "CustomerChurn[TotalCharges]": 3027.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8807-ARQET", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 41, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 40.35, "CustomerChurn[TotalCharges]": 1677.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2625-TRCZQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.65, "CustomerChurn[TotalCharges]": 2553.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3329-WDIOK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.6, "CustomerChurn[TotalCharges]": 155.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2187-LZGPL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 40.1, "CustomerChurn[TotalCharges]": 293.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1251-KRREG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 54.4, "CustomerChurn[TotalCharges]": 114.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8967-SZQAS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.45, "CustomerChurn[TotalCharges]": 765.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8069-YQQAJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 31.1, "CustomerChurn[TotalCharges]": 419.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3723-BFBGR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 54.8, "CustomerChurn[TotalCharges]": 1291.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7389-KBFIT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 30.25, "CustomerChurn[TotalCharges]": 63.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3345-PBBFH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.55, "CustomerChurn[TotalCharges]": 393.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2606-RMDHZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 30.5, "CustomerChurn[TotalCharges]": 208.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3173-NVMPX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.3, "CustomerChurn[TotalCharges]": 501.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7054-ENNGU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.85, "CustomerChurn[TotalCharges]": 466.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9881-VCZEP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.1, "CustomerChurn[TotalCharges]": 1373.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8654-DHAOW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 54.15, "CustomerChurn[TotalCharges]": 101.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1442-BQPVU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.15, "CustomerChurn[TotalCharges]": 357.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6304-IJFSQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.9, "CustomerChurn[TotalCharges]": 130.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9947-OTFQU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.4, "CustomerChurn[TotalCharges]": 1074.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9944-HKVVB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.1, "CustomerChurn[TotalCharges]": 307.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5146-CBVOE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.1, "CustomerChurn[TotalCharges]": 1212.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3733-LSYCE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.35, "CustomerChurn[TotalCharges]": 1114.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5899-OUVKV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.5, "CustomerChurn[TotalCharges]": 2979.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4143-HHPMK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.35, "CustomerChurn[TotalCharges]": 4338.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2135-DQWAQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 85.3, "CustomerChurn[TotalCharges]": 420.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7517-LDMPS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.6, "CustomerChurn[TotalCharges]": 1017.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8393-DLHGA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.9, "CustomerChurn[TotalCharges]": 2448.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4536-PLEQY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 85.05, "CustomerChurn[TotalCharges]": 999.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0621-HJWXJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 81.55, "CustomerChurn[TotalCharges]": 5029.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4462-CYWMH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 89.8, "CustomerChurn[TotalCharges]": 5629.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2869-ADAWR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 45, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 89.3, "CustomerChurn[TotalCharges]": 4016.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8444-WRIDW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 80.45, "CustomerChurn[TotalCharges]": 5224.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6467-CHFZW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.35, "CustomerChurn[TotalCharges]": 4749.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1254-IZEYF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.95, "CustomerChurn[TotalCharges]": 3186.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8384-FZBJK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.6, "CustomerChurn[TotalCharges]": 5611.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0924-BJCRC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.45, "CustomerChurn[TotalCharges]": 5294.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1891-FZYSA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.95, "CustomerChurn[TotalCharges]": 6143.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9281-OFDMF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.7, "CustomerChurn[TotalCharges]": 3413.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6088-BXMRG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 32, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.85, "CustomerChurn[TotalCharges]": 3089.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9773-PEQBZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.85, "CustomerChurn[TotalCharges]": 797.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2208-UGTGR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.6, "CustomerChurn[TotalCharges]": 5581.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7278-CKDNC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.5, "CustomerChurn[TotalCharges]": 2088.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6987-XQSJT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.5, "CustomerChurn[TotalCharges]": 4370.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3462-BJQQA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.75, "CustomerChurn[TotalCharges]": 552.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9600-NAXZN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.4, "CustomerChurn[TotalCharges]": 4528.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3050-GBUSH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 34.8, "CustomerChurn[TotalCharges]": 113.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2373-NTKOD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 66.25, "CustomerChurn[TotalCharges]": 546.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0749-IRGQE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.3, "CustomerChurn[TotalCharges]": 528.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6240-EURKS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 553.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5515-RUGKN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 54.75, "CustomerChurn[TotalCharges]": 438.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8066-POXGX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.1, "CustomerChurn[TotalCharges]": 446.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4662-EKDPQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 62.05, "CustomerChurn[TotalCharges]": 118.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0463-ZSDNT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 56.75, "CustomerChurn[TotalCharges]": 503.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6180-YBIQI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.3, "CustomerChurn[TotalCharges]": 100.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0224-HJAPT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 47.15, "CustomerChurn[TotalCharges]": 223.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3126-WQMGH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 52.15, "CustomerChurn[TotalCharges]": 2583.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4236-UJPWO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.5, "CustomerChurn[TotalCharges]": 46.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1329-VHWNP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.05, "CustomerChurn[TotalCharges]": 189.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0440-QEXBZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.15, "CustomerChurn[TotalCharges]": 2139.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6542-LWGXJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 78.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9638-JIQYA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.9, "CustomerChurn[TotalCharges]": 49.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5480-HPRRX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.3, "CustomerChurn[TotalCharges]": 77.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4690-LLKUA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.05, "CustomerChurn[TotalCharges]": 770.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3258-SANFR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 44.7, "CustomerChurn[TotalCharges]": 276.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0322-CHQRU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.35, "CustomerChurn[TotalCharges]": 89.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4671-LXRDQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 96.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0621-TWIEM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.55, "CustomerChurn[TotalCharges]": 402.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7878-JGDKK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.55, "CustomerChurn[TotalCharges]": 220.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2831-EBWRN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.9, "CustomerChurn[TotalCharges]": 199.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7587-RZNME", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 43.3, "CustomerChurn[TotalCharges]": 123.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2219-MVUSO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.15, "CustomerChurn[TotalCharges]": 438.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1501-SGHBW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.85, "CustomerChurn[TotalCharges]": 81.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7396-VJUZB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.25, "CustomerChurn[TotalCharges]": 155.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3255-GRXMG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 45.65, "CustomerChurn[TotalCharges]": 747.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6143-JQKEA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 45.8, "CustomerChurn[TotalCharges]": 436.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7109-MFBYV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.45, "CustomerChurn[TotalCharges]": 1233.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2842-JTCCU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 46.05, "CustomerChurn[TotalCharges]": 80.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3640-JQGJG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 44.8, "CustomerChurn[TotalCharges]": 559.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0913-XWSCN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.5, "CustomerChurn[TotalCharges]": 4713.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5357-TZHPP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 84.4, "CustomerChurn[TotalCharges]": 732.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5373-SFODM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 85.25, "CustomerChurn[TotalCharges]": 3132.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9600-UDOPK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 94.05, "CustomerChurn[TotalCharges]": 2866.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9025-AOMKI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 93.55, "CustomerChurn[TotalCharges]": 536.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0432-CAJZV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 90.7, "CustomerChurn[TotalCharges]": 237.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3006-XIMLN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 94.2, "CustomerChurn[TotalCharges]": 193.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6729-GDNGC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 80.7, "CustomerChurn[TotalCharges]": 1614.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6825-UYPFK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.6, "CustomerChurn[TotalCharges]": 1758.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8329-GWVPJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.75, "CustomerChurn[TotalCharges]": 3557.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1047-NNCBF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 70.55, "CustomerChurn[TotalCharges]": 1493.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4450-MDZFX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 74.35, "CustomerChurn[TotalCharges]": 4453.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3074-GQWYX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.9, "CustomerChurn[TotalCharges]": 357.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1596-BBVTG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 75.35, "CustomerChurn[TotalCharges]": 2636.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7128-GGCNO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 72.8, "CustomerChurn[TotalCharges]": 3249.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5600-KTXFM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.95, "CustomerChurn[TotalCharges]": 143.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8224-DWCKX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.3, "CustomerChurn[TotalCharges]": 828.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8993-IZEUX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.15, "CustomerChurn[TotalCharges]": 488.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7912-SYRQT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.1, "CustomerChurn[TotalCharges]": 552.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5419-JKZNQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 77.9, "CustomerChurn[TotalCharges]": 2351.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8873-GLDMH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 73.85, "CustomerChurn[TotalCharges]": 401.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6311-UEUME", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.9, "CustomerChurn[TotalCharges]": 2384.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3318-NMQXL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 92.0, "CustomerChurn[TotalCharges]": 266.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6986-IXNDM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 92.9, "CustomerChurn[TotalCharges]": 1337.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6437-UKHMV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.7, "CustomerChurn[TotalCharges]": 586.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8752-STIVR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 303.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8875-AKBYH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.35, "CustomerChurn[TotalCharges]": 1745.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2215-ZAFGX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.5, "CustomerChurn[TotalCharges]": 791.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5364-XYIRR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.65, "CustomerChurn[TotalCharges]": 4812.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0916-QOFDP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.8, "CustomerChurn[TotalCharges]": 1346.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7402-EYFXX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.6, "CustomerChurn[TotalCharges]": 2404.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0195-IESCP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.25, "CustomerChurn[TotalCharges]": 855.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6474-FVJLC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 165.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0524-IAVZO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 2624.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7779-LGOVN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.65, "CustomerChurn[TotalCharges]": 856.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5229-PRWKT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.55, "CustomerChurn[TotalCharges]": 649.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5383-MMTWC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 613.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1226-IENZN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.75, "CustomerChurn[TotalCharges]": 1218.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4846-WHAFZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.5, "CustomerChurn[TotalCharges]": 2868.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0122-OAHPZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.85, "CustomerChurn[TotalCharges]": 511.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5879-SESNB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.25, "CustomerChurn[TotalCharges]": 888.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7341-LXCAF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.65, "CustomerChurn[TotalCharges]": 301.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0722-TROQR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.9, "CustomerChurn[TotalCharges]": 321.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3370-HXOPH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.1, "CustomerChurn[TotalCharges]": 257.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9274-CNFMO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.95, "CustomerChurn[TotalCharges]": 308.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9824-BEMCV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 1149.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9722-UJOJR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.75, "CustomerChurn[TotalCharges]": 1974.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0508-OOLTO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.65, "CustomerChurn[TotalCharges]": 135.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4482-EWFMI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.7, "CustomerChurn[TotalCharges]": 135.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2799-ARNLO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.35, "CustomerChurn[TotalCharges]": 341.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6705-LXORM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.05, "CustomerChurn[TotalCharges]": 302.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4291-SHSBH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.55, "CustomerChurn[TotalCharges]": 521.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0330-IVZHA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.95, "CustomerChurn[TotalCharges]": 330.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6557-BZXLQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.65, "CustomerChurn[TotalCharges]": 1043.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3999-QGRJH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.7, "CustomerChurn[TotalCharges]": 560.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7044-YAACC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.2, "CustomerChurn[TotalCharges]": 280.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7394-LWLYN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.15, "CustomerChurn[TotalCharges]": 123.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8630-FJLIB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.8, "CustomerChurn[TotalCharges]": 1221.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3721-CNEYS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.95, "CustomerChurn[TotalCharges]": 137.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3627-FCRDW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 672.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3014-WJKSM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 75.3, "CustomerChurn[TotalCharges]": 2263.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8357-EQXFO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.35, "CustomerChurn[TotalCharges]": 660.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5043-TRZWM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.55, "CustomerChurn[TotalCharges]": 75.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0004-TLHLJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.9, "CustomerChurn[TotalCharges]": 280.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7658-UYUQS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 86.55, "CustomerChurn[TotalCharges]": 1857.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9223-UCPVT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.4, "CustomerChurn[TotalCharges]": 94.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6339-YPSAH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.8, "CustomerChurn[TotalCharges]": 704.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6230-BSUXY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4767-HZZHQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 82.05, "CustomerChurn[TotalCharges]": 2570.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5419-KLXBN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 89.15, "CustomerChurn[TotalCharges]": 2257.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2603-HVKCG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.4, "CustomerChurn[TotalCharges]": 3143.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7682-AZNDK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.85, "CustomerChurn[TotalCharges]": 3091.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9688-YGXVR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 88.15, "CustomerChurn[TotalCharges]": 3973.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0302-JOIVN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.15, "CustomerChurn[TotalCharges]": 842.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0727-IWKVK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.9, "CustomerChurn[TotalCharges]": 741.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0219-YTZUE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 84.8, "CustomerChurn[TotalCharges]": 371.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0533-BNWKF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.45, "CustomerChurn[TotalCharges]": 4874.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8981-FJGLA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 78.0, "CustomerChurn[TotalCharges]": 851.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2070-XYMFH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.35, "CustomerChurn[TotalCharges]": 1835.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7449-HVPIV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.4, "CustomerChurn[TotalCharges]": 5099.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1170-SASML", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.4, "CustomerChurn[TotalCharges]": 5869.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7483-IQWIB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 92.95, "CustomerChurn[TotalCharges]": 3415.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4559-UWIHT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 82.65, "CustomerChurn[TotalCharges]": 1185.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8914-RBTSB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.8, "CustomerChurn[TotalCharges]": 3019.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6137-NICCO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 94.05, "CustomerChurn[TotalCharges]": 518.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5520-FVEWJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.5, "CustomerChurn[TotalCharges]": 916.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7703-ZEKEF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 81.0, "CustomerChurn[TotalCharges]": 1917.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3161-GETRM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.05, "CustomerChurn[TotalCharges]": 3097.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4566-NECEV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.55, "CustomerChurn[TotalCharges]": 500.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0979-PHULV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 99.45, "CustomerChurn[TotalCharges]": 7007.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3804-RVTGV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 103.85, "CustomerChurn[TotalCharges]": 5017.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3761-FLYZI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 108.8, "CustomerChurn[TotalCharges]": 7082.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8378-LKJAF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 101.15, "CustomerChurn[TotalCharges]": 3956.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1587-FKLZB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 99.5, "CustomerChurn[TotalCharges]": 6822.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8059-UDZFY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 105.35, "CustomerChurn[TotalCharges]": 3465.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9547-ITEFG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 102.6, "CustomerChurn[TotalCharges]": 897.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1751-NCDLI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.85, "CustomerChurn[TotalCharges]": 4564.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4433-JCGCG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.0, "CustomerChurn[TotalCharges]": 4680.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4553-DVPZG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.35, "CustomerChurn[TotalCharges]": 6164.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8818-DOPVL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 104.45, "CustomerChurn[TotalCharges]": 4863.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4735-ASGMA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.35, "CustomerChurn[TotalCharges]": 2515.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4078-SAYYN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.75, "CustomerChurn[TotalCharges]": 1129.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7159-FVYPK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.15, "CustomerChurn[TotalCharges]": 235.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7950-XWOVN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 34.7, "CustomerChurn[TotalCharges]": 383.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9013-AQORL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 48, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 45.55, "CustomerChurn[TotalCharges]": 2108.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2985-JUUBZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.55, "CustomerChurn[TotalCharges]": 3015.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4349-GFQHK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.35, "CustomerChurn[TotalCharges]": 54.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7470-MCQTK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 48.75, "CustomerChurn[TotalCharges]": 633.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7743-EXURX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.05, "CustomerChurn[TotalCharges]": 415.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8495-PRWFH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 42, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.65, "CustomerChurn[TotalCharges]": 2421.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7895-VONWT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 48.25, "CustomerChurn[TotalCharges]": 1293.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0486-HECZI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.75, "CustomerChurn[TotalCharges]": 5238.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6891-JPYFF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 48, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 105.25, "CustomerChurn[TotalCharges]": 4997.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8510-AWCXC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.8, "CustomerChurn[TotalCharges]": 1308.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0058-EVZWM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 89.8, "CustomerChurn[TotalCharges]": 4959.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5590-BYNII", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.75, "CustomerChurn[TotalCharges]": 2095.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0684-AOSIH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 95.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9699-UBQFS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.5, "CustomerChurn[TotalCharges]": 4156.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3588-WSTTJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.05, "CustomerChurn[TotalCharges]": 3554.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3701-SFMUH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.7, "CustomerChurn[TotalCharges]": 516.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2959-EEXWB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 45, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 50.9, "CustomerChurn[TotalCharges]": 2333.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7088-FBAWU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 74.55, "CustomerChurn[TotalCharges]": 1215.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9074-KGVOX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 39.45, "CustomerChurn[TotalCharges]": 2021.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0872-JCPIB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 65.75, "CustomerChurn[TotalCharges]": 1111.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7459-RRWQZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 64.65, "CustomerChurn[TotalCharges]": 994.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8100-HZZLJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 63.95, "CustomerChurn[TotalCharges]": 2737.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4659-NZRUF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.15, "CustomerChurn[TotalCharges]": 1789.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6741-EGCBI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.5, "CustomerChurn[TotalCharges]": 2595.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5708-EVONK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 93.4, "CustomerChurn[TotalCharges]": 5435.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5353-WILCI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 56.05, "CustomerChurn[TotalCharges]": 1522.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5206-HPJKM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.5, "CustomerChurn[TotalCharges]": 934.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7957-RYHQD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.2, "CustomerChurn[TotalCharges]": 3233.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8128-YVJRG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.65, "CustomerChurn[TotalCharges]": 604.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6772-KSATR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 81.7, "CustomerChurn[TotalCharges]": 81.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9626-WEQRM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.15, "CustomerChurn[TotalCharges]": 110.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0032-PGELS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 30.5, "CustomerChurn[TotalCharges]": 30.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6390-DSAZX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 73.6, "CustomerChurn[TotalCharges]": 73.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0388-EOPEX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.4, "CustomerChurn[TotalCharges]": 139.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5207-PLSTK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 48.75, "CustomerChurn[TotalCharges]": 48.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5201-FRKKS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 74.3, "CustomerChurn[TotalCharges]": 1952.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7611-YKYTC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 1573.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0623-GDISB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 48.45, "CustomerChurn[TotalCharges]": 48.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1794-HBQTJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 48.6, "CustomerChurn[TotalCharges]": 48.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0384-RVBPI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.4, "CustomerChurn[TotalCharges]": 1398.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6620-JDYNW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 60.6, "CustomerChurn[TotalCharges]": 1156.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2045-BMBTJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 59.45, "CustomerChurn[TotalCharges]": 1884.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9842-EFSYY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 57.2, "CustomerChurn[TotalCharges]": 223.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2911-UREFD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.9, "CustomerChurn[TotalCharges]": 2184.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2458-EOMRE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 64.05, "CustomerChurn[TotalCharges]": 733.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9058-HRZSV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.4, "CustomerChurn[TotalCharges]": 6126.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6416-YJTTB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 79.5, "CustomerChurn[TotalCharges]": 795.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4402-FTBXC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 89.8, "CustomerChurn[TotalCharges]": 4667.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6794-HKIAJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 90.7, "CustomerChurn[TotalCharges]": 5586.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8749-JMNKX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 93.8, "CustomerChurn[TotalCharges]": 4750.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2979-SXESE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.4, "CustomerChurn[TotalCharges]": 1607.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3934-HXCFZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.25, "CustomerChurn[TotalCharges]": 2186.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1193-RTSLK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 83.9, "CustomerChurn[TotalCharges]": 3233.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6413-XKKPU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.4, "CustomerChurn[TotalCharges]": 1539.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6581-NQCBA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.95, "CustomerChurn[TotalCharges]": 810.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4307-KWMXE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.75, "CustomerChurn[TotalCharges]": 389.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8070-AAWZP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 34.25, "CustomerChurn[TotalCharges]": 828.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0836-SEYLU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 40.65, "CustomerChurn[TotalCharges]": 328.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5154-VEKBL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 58.5, "CustomerChurn[TotalCharges]": 539.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4439-YRNVD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 36.25, "CustomerChurn[TotalCharges]": 374.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8706-HRADD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 43.55, "CustomerChurn[TotalCharges]": 1011.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8350-NYMVI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 41.1, "CustomerChurn[TotalCharges]": 1597.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7851-FLGGQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.65, "CustomerChurn[TotalCharges]": 44.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4672-FOTSD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 67.25, "CustomerChurn[TotalCharges]": 832.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1702-CCFNJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 61.35, "CustomerChurn[TotalCharges]": 3169.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4981-FLTMF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 65.2, "CustomerChurn[TotalCharges]": 3687.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7925-PNRGI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 45, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 81.3, "CustomerChurn[TotalCharges]": 3541.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3137-LUPIX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 64.4, "CustomerChurn[TotalCharges]": 253.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4710-NKCAW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.4, "CustomerChurn[TotalCharges]": 316.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5898-IGSLP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.3, "CustomerChurn[TotalCharges]": 2823.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7587-AOVVU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.75, "CustomerChurn[TotalCharges]": 2793.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0487-RPVUM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 99.4, "CustomerChurn[TotalCharges]": 5943.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3143-ILDAL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.45, "CustomerChurn[TotalCharges]": 5124.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2873-ZLIWT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.85, "CustomerChurn[TotalCharges]": 3303.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1020-JPQOW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.55, "CustomerChurn[TotalCharges]": 5116.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7621-VPNET", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 42, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 85.9, "CustomerChurn[TotalCharges]": 3729.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8023-QHAIO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 76.85, "CustomerChurn[TotalCharges]": 4275.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9415-DPEWS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.35, "CustomerChurn[TotalCharges]": 1639.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9508-ILZDG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.35, "CustomerChurn[TotalCharges]": 3190.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3323-CPBWR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 96.9, "CustomerChurn[TotalCharges]": 2085.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6300-BWMJX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.35, "CustomerChurn[TotalCharges]": 5386.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6599-RCLCJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 109.55, "CustomerChurn[TotalCharges]": 5124.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7748-UMTRK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.3, "CustomerChurn[TotalCharges]": 2974.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2277-DJJDL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.0, "CustomerChurn[TotalCharges]": 6017.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6710-HSJRD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 114.1, "CustomerChurn[TotalCharges]": 7132.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2357-COQEK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 103.3, "CustomerChurn[TotalCharges]": 2890.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5569-OUICF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 101.3, "CustomerChurn[TotalCharges]": 2812.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0147-ESWWR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.25, "CustomerChurn[TotalCharges]": 3949.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2832-KJCRD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 103.65, "CustomerChurn[TotalCharges]": 3988.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8784-CGILN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 99.85, "CustomerChurn[TotalCharges]": 1776.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6286-ZHAOK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.55, "CustomerChurn[TotalCharges]": 507.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0484-JPBRU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 41, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.25, "CustomerChurn[TotalCharges]": 996.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2565-JSLRY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.05, "CustomerChurn[TotalCharges]": 24.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9027-YFHQJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.05, "CustomerChurn[TotalCharges]": 152.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8746-OQQRW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.25, "CustomerChurn[TotalCharges]": 101.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5018-HEKFO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.5, "CustomerChurn[TotalCharges]": 270.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7812-FZHPE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.1, "CustomerChurn[TotalCharges]": 409.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0568-ONFPC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.9, "CustomerChurn[TotalCharges]": 135.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4430-YHXGG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.45, "CustomerChurn[TotalCharges]": 84.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6258-NGCNG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 23.5, "CustomerChurn[TotalCharges]": 173.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6092-QZVPP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.2, "CustomerChurn[TotalCharges]": 2854.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2506-CLAKW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 98.15, "CustomerChurn[TotalCharges]": 567.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5141-ZUVBH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 93.0, "CustomerChurn[TotalCharges]": 870.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4673-KKSLS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 87.6, "CustomerChurn[TotalCharges]": 2724.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7277-OZCGZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.05, "CustomerChurn[TotalCharges]": 1886.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4315-MURBD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 98.9, "CustomerChurn[TotalCharges]": 1120.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7217-JYHOQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 70.3, "CustomerChurn[TotalCharges]": 1706.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7707-PYBBH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 61.9, "CustomerChurn[TotalCharges]": 2647.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1394-SUIUH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.15, "CustomerChurn[TotalCharges]": 3670.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0870-VEMYL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 53.85, "CustomerChurn[TotalCharges]": 259.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4558-FANTW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 91.85, "CustomerChurn[TotalCharges]": 1574.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8217-QYOHV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.75, "CustomerChurn[TotalCharges]": 266.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8731-WBBMB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 81.9, "CustomerChurn[TotalCharges]": 2078.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2344-JMOGN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 94.85, "CustomerChurn[TotalCharges]": 890.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7382-DFJTU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.2, "CustomerChurn[TotalCharges]": 1058.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8640-SDGKB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.4, "CustomerChurn[TotalCharges]": 299.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0772-GYEQQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 88.35, "CustomerChurn[TotalCharges]": 262.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2018-PZKMU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 103.1, "CustomerChurn[TotalCharges]": 970.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3863-QSTYI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 64.65, "CustomerChurn[TotalCharges]": 3735.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0742-MOABM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.05, "CustomerChurn[TotalCharges]": 179.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7218-HKQFK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.2, "CustomerChurn[TotalCharges]": 167.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5522-NYKPB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.9, "CustomerChurn[TotalCharges]": 2199.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7742-MYPGI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 48.8, "CustomerChurn[TotalCharges]": 297.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0423-UDIJQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.2, "CustomerChurn[TotalCharges]": 447.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5701-ZIKJE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.55, "CustomerChurn[TotalCharges]": 610.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1213-NGCUN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.65, "CustomerChurn[TotalCharges]": 267.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7798-JVXYM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.65, "CustomerChurn[TotalCharges]": 921.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9210-IAHGH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 70.75, "CustomerChurn[TotalCharges]": 450.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3733-ZEECP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.1, "CustomerChurn[TotalCharges]": 1232.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4785-NKHCX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.05, "CustomerChurn[TotalCharges]": 94.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4488-PSYCG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.25, "CustomerChurn[TotalCharges]": 327.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1159-WFSGR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 20.4, "CustomerChurn[TotalCharges]": 321.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1925-GMVBW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.55, "CustomerChurn[TotalCharges]": 96.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8246-SHFGA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 21.1, "CustomerChurn[TotalCharges]": 385.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3097-PYWXL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 19.95, "CustomerChurn[TotalCharges]": 82.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3345-JHUEO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 20.2, "CustomerChurn[TotalCharges]": 55.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3694-GLTJM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.65, "CustomerChurn[TotalCharges]": 92.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2428-ZMCTB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.75, "CustomerChurn[TotalCharges]": 208.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4018-KJYUY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 432.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2303-PJYHN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.85, "CustomerChurn[TotalCharges]": 52.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8457-XIGKN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.6, "CustomerChurn[TotalCharges]": 356.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2159-TURXX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.05, "CustomerChurn[TotalCharges]": 95.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6549-YMFAW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 21.25, "CustomerChurn[TotalCharges]": 204.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4946-EDSEW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.25, "CustomerChurn[TotalCharges]": 180.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2839-RFSQE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.65, "CustomerChurn[TotalCharges]": 38.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6776-TLWOI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.85, "CustomerChurn[TotalCharges]": 64.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4195-SMMNX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.35, "CustomerChurn[TotalCharges]": 33.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3675-YDUPJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.85, "CustomerChurn[TotalCharges]": 193.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6184-DYUOB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.6, "CustomerChurn[TotalCharges]": 55.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0594-UFTUL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.85, "CustomerChurn[TotalCharges]": 252.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0487-VVUVK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.15, "CustomerChurn[TotalCharges]": 477.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5144-PQCDZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.95, "CustomerChurn[TotalCharges]": 59.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1257-SXUXQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.45, "CustomerChurn[TotalCharges]": 86.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3012-VFFMN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.65, "CustomerChurn[TotalCharges]": 158.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1498-DQNRX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.85, "CustomerChurn[TotalCharges]": 573.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6476-EPYZR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.5, "CustomerChurn[TotalCharges]": 255.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9184-GALIL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.45, "CustomerChurn[TotalCharges]": 781.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4719-UMSIY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.65, "CustomerChurn[TotalCharges]": 100.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9046-JBFWA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.15, "CustomerChurn[TotalCharges]": 537.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1760-CAZHT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.8, "CustomerChurn[TotalCharges]": 460.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6621-YOBKI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.35, "CustomerChurn[TotalCharges]": 92.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6979-TNDEU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.2, "CustomerChurn[TotalCharges]": 156.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5222-JCXZT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.0, "CustomerChurn[TotalCharges]": 78.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5863-OOKCL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 18.85, "CustomerChurn[TotalCharges]": 163.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6040-CGACY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.6, "CustomerChurn[TotalCharges]": 299.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4397-FRLTA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 84.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1029-QFBEN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.55, "CustomerChurn[TotalCharges]": 19.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2592-YKDIF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.35, "CustomerChurn[TotalCharges]": 20.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8393-JMVMB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.45, "CustomerChurn[TotalCharges]": 19.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9441-QHEVC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.1, "CustomerChurn[TotalCharges]": 19.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6141-OOXUQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.65, "CustomerChurn[TotalCharges]": 19.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9318-NKNFC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 18.85, "CustomerChurn[TotalCharges]": 18.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3717-OFRTN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.75, "CustomerChurn[TotalCharges]": 19.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0817-HSUSE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.5, "CustomerChurn[TotalCharges]": 75.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2792-LSHWX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 83.4, "CustomerChurn[TotalCharges]": 83.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2468-SJFLM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 74.3, "CustomerChurn[TotalCharges]": 74.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1447-PJGGA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.25, "CustomerChurn[TotalCharges]": 5464.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5440-FLBQG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 108.4, "CustomerChurn[TotalCharges]": 7318.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3841-NFECX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 96.35, "CustomerChurn[TotalCharges]": 6766.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9076-AXYIK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 64, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 102.1, "CustomerChurn[TotalCharges]": 6538.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4849-PYRLQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 73.25, "CustomerChurn[TotalCharges]": 4054.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2176-LVPNX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 89.85, "CustomerChurn[TotalCharges]": 6293.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9220-ZNKJI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 88.8, "CustomerChurn[TotalCharges]": 4805.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2277-BKJKN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.2, "CustomerChurn[TotalCharges]": 7213.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3597-YASZG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 104.45, "CustomerChurn[TotalCharges]": 7349.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7740-BTPUX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 113.6, "CustomerChurn[TotalCharges]": 6292.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4039-PIMHX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.8, "CustomerChurn[TotalCharges]": 2398.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4884-TVUQF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 101.3, "CustomerChurn[TotalCharges]": 5779.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1409-PHXTF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 110.45, "CustomerChurn[TotalCharges]": 6077.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0716-BQNDX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.75, "CustomerChurn[TotalCharges]": 5625.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1635-NZATJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.45, "CustomerChurn[TotalCharges]": 1789.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6120-RJKLU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.95, "CustomerChurn[TotalCharges]": 4819.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0621-JFHOL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.6, "CustomerChurn[TotalCharges]": 299.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3745-HRPHI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 54.65, "CustomerChurn[TotalCharges]": 3632.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0458-HEUZG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 35.4, "CustomerChurn[TotalCharges]": 450.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7665-NKLAV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 40.65, "CustomerChurn[TotalCharges]": 1547.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7274-CGTOD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 43.7, "CustomerChurn[TotalCharges]": 2618.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8039-EQPIM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 60.25, "CustomerChurn[TotalCharges]": 4055.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6762-QVYJO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 59.75, "CustomerChurn[TotalCharges]": 3624.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1194-BHJYC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 62.15, "CustomerChurn[TotalCharges]": 3778.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1209-VFFOC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 56.4, "CustomerChurn[TotalCharges]": 3948.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2580-ASVVY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.4, "CustomerChurn[TotalCharges]": 1593.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5010-IPEAQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 54.2, "CustomerChurn[TotalCharges]": 3623.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9610-WCESF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 43.9, "CustomerChurn[TotalCharges]": 3097.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9489-DEDVP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.2, "CustomerChurn[TotalCharges]": 4872.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5781-RFZRP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.5, "CustomerChurn[TotalCharges]": 5357.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4178-EGMON", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 88.0, "CustomerChurn[TotalCharges]": 5986.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6248-TKCQV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 80.6, "CustomerChurn[TotalCharges]": 5460.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5055-BRMNE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 106.7, "CustomerChurn[TotalCharges]": 7009.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1172-VIYBP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.7, "CustomerChurn[TotalCharges]": 3686.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6586-MYGKD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 76.95, "CustomerChurn[TotalCharges]": 5289.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1936-UAFEH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 110.25, "CustomerChurn[TotalCharges]": 7279.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2632-TACXW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 23.65, "CustomerChurn[TotalCharges]": 1416.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1299-AURJA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 24.7, "CustomerChurn[TotalCharges]": 1685.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5939-SXWHM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 48, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 26.3, "CustomerChurn[TotalCharges]": 1245.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2908-WGAXL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.95, "CustomerChurn[TotalCharges]": 1468.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9668-PUGNU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.5, "CustomerChurn[TotalCharges]": 1816.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4213-HKBJO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.7, "CustomerChurn[TotalCharges]": 826.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5220-AGAAX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 1664.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7008-LZVOZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.3, "CustomerChurn[TotalCharges]": 1672.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5075-JSDKI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.45, "CustomerChurn[TotalCharges]": 1493.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6857-TKDJV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 24.65, "CustomerChurn[TotalCharges]": 1620.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0485-ZBSLN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.75, "CustomerChurn[TotalCharges]": 1715.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1535-VTJOQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.15, "CustomerChurn[TotalCharges]": 553.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5115-SQAAU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.6, "CustomerChurn[TotalCharges]": 1673.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5322-ZSMZY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.75, "CustomerChurn[TotalCharges]": 755.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4526-EXKKN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.6, "CustomerChurn[TotalCharges]": 973.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7503-EPSZW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 64, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.05, "CustomerChurn[TotalCharges]": 1559.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3213-VVOLG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 0, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.35, "CustomerChurn[TotalCharges]": null, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7608-RGIRO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.4, "CustomerChurn[TotalCharges]": 1413.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8946-BFWSG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.25, "CustomerChurn[TotalCharges]": 1573.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8295-KMENE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 76.45, "CustomerChurn[TotalCharges]": 4519.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3050-RLLXC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 81.25, "CustomerChurn[TotalCharges]": 4620.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7162-WPHPM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 71.6, "CustomerChurn[TotalCharges]": 4230.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3428-MMGUB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.55, "CustomerChurn[TotalCharges]": 5231.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1621-YNCJH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 106.05, "CustomerChurn[TotalCharges]": 3834.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9570-KYEUA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 64, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 99.25, "CustomerChurn[TotalCharges]": 6549.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2649-HWLYB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 76.15, "CustomerChurn[TotalCharges]": 4929.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5855-EIBDE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 106.65, "CustomerChurn[TotalCharges]": 5174.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2927-CVULT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 104.05, "CustomerChurn[TotalCharges]": 5566.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0771-CHWSK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.6, "CustomerChurn[TotalCharges]": 4798.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5193-QLVZB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 104.75, "CustomerChurn[TotalCharges]": 6536.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5360-LJCNJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 105.15, "CustomerChurn[TotalCharges]": 7555.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6733-LRIZX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 108.95, "CustomerChurn[TotalCharges]": 4025.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6308-CQRBU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 109.25, "CustomerChurn[TotalCharges]": 7707.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9530-GRMJG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.1, "CustomerChurn[TotalCharges]": 5979.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3227-WLKLI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 91.55, "CustomerChurn[TotalCharges]": 5963.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5117-ZSMHQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 89.9, "CustomerChurn[TotalCharges]": 6342.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2223-GDSHL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 116.05, "CustomerChurn[TotalCharges]": 8297.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3882-IYOIJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 115.25, "CustomerChurn[TotalCharges]": 6758.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7929-SKFGK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 114.3, "CustomerChurn[TotalCharges]": 8244.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6556-DBKZF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.05, "CustomerChurn[TotalCharges]": 5436.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4568-KNYWR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 63.25, "CustomerChurn[TotalCharges]": 3342.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0379-DJQHR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 81.35, "CustomerChurn[TotalCharges]": 5398.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5993-JSUWV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 61.15, "CustomerChurn[TotalCharges]": 4017.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1303-SRDOK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.05, "CustomerChurn[TotalCharges]": 3842.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6322-PJJDJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.8, "CustomerChurn[TotalCharges]": 4690.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9541-ZPSEA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 80.35, "CustomerChurn[TotalCharges]": 5375.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8232-CTLKO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.75, "CustomerChurn[TotalCharges]": 3996.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1960-UOTYM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.2, "CustomerChurn[TotalCharges]": 4016.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4622-YNKIJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.95, "CustomerChurn[TotalCharges]": 3027.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0181-RITDD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 108.15, "CustomerChurn[TotalCharges]": 6825.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8216-AZUUZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 42, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.4, "CustomerChurn[TotalCharges]": 4303.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4366-CTOUZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 100.2, "CustomerChurn[TotalCharges]": 5038.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2599-CIPQE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 109.3, "CustomerChurn[TotalCharges]": 7782.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4043-MKDTV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 105.25, "CustomerChurn[TotalCharges]": 7291.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3374-TTZTK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 106.3, "CustomerChurn[TotalCharges]": 5487.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1414-YADCW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 84.6, "CustomerChurn[TotalCharges]": 5706.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6603-QWSPR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 104.4, "CustomerChurn[TotalCharges]": 4904.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3174-AKMAS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.2, "CustomerChurn[TotalCharges]": 3009.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0604-THJFP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 75.95, "CustomerChurn[TotalCharges]": 4542.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0487-CRLZF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 74.45, "CustomerChurn[TotalCharges]": 3721.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2661-GKBTK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 76.95, "CustomerChurn[TotalCharges]": 4543.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2256-YLYLP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 72.95, "CustomerChurn[TotalCharges]": 4953.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5846-NEQVZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 70.85, "CustomerChurn[TotalCharges]": 4973.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9871-ELEYA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 67.65, "CustomerChurn[TotalCharges]": 2339.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5318-YKDPV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.15, "CustomerChurn[TotalCharges]": 3566.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9795-SHUHB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 58.2, "CustomerChurn[TotalCharges]": 3810.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3795-GWTRD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 75.55, "CustomerChurn[TotalCharges]": 4707.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7860-UXCRM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.5, "CustomerChurn[TotalCharges]": 4674.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9786-YWNHU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 63.55, "CustomerChurn[TotalCharges]": 4014.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5614-DNZCE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.9, "CustomerChurn[TotalCharges]": 3795.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0042-RLHYP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.7, "CustomerChurn[TotalCharges]": 1396.9, "CustomerChurn[Churn]": false}], "samplecount": 701, "samplefile": "/FileStore/platform/sampleData/649c00cae61a96675bcdf6db/part-00000-07d57ccd-efa2-48cc-b41b-5c4c427080d9-c000.csv"}, {"_id": "649c00cae61a96675bcdf6dc", "mode": "staged", "originalfile": "/FileStore/platform/extra/tempFile1687945407.csv", "in": ["649c00cae61a96675bcdf6db"], "out": ["649c00cae61a96675bcdf6dd"], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "CustomerChurn_AutoFE", "dataPercentage": "10", "comment": "", "pipeline_id": "649c00cae61a96675bcdf6d8", "sub_type": "Feature", "stage_type": "transformation", "stage_attributes": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "100", "sampledata": [{"CustomerChurn[customerID]": "0390-DCFDQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 160.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5940-AHUHD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 172.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5583-SXDAG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 150.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4110-PFEUZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 388.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8040-MNRTF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 136.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1820-TQVEV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 237.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5875-YPQFJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 422.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7206-GZCDC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 12.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8375-DKEBR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 149.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9804-ICWBG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 81.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8380-PEFPE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 152.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3494-JCHRQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 419.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8000-REIQB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 156.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8309-IEYJD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 373.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3177-LASXD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 181.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1084-UQCHV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 28.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "8051-HJRLT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 105.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0151-ONTOV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 282.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6140-QNRQQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 274.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1846-XWOQN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 484.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9603-OAIHC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 469.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5186-SAMNZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 428.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "2262-SLNVK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 103.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5539-TMZLF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 396.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7409-KIUTL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 252.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0679-IDSTG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 112.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5542-TBBWB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 337.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1086-LXKFY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 51.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2636-ALXXZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 260.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1640-PLFMP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 45.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9617-INGJY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 170.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4510-HIMLV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 326.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3878-AVSOQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 85.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3716-BDVDB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 332.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9488-HGMJH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 359.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0968-GSIKN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 442.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4806-HIPDW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 68.0, "CustomerChurn[TotalCharges]": 68.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 483.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8644-XLFBW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 71.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0812-WUPTB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 426.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3871-IKPYH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 56.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2920-RNCEZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 448.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1915-IOFGU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 403.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7665-TOALD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 256.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6416-TVAIH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 68.0, "CustomerChurn[TotalCharges]": 68.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 169.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3066-RRJIO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 78.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "0515-YPMCW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 235.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4603-JANFB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 234.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7908-QCBCA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 342.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7465-ZZRVX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 94.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4702-IOQDC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 111.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3428-XZMAZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 436.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1853-UDXBW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 407.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5032-MIYKT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 46.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "0511-JTEOY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 338.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5134-IKDAY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 346.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5884-GCYMI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 479.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6653-CBBOM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 362.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4759-TRPLW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 145.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8062-YBDOE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 34.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5376-DEQCP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 104.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2506-TNFCO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 80.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2619-WFQWU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 292.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5550-VFRLC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 377.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3244-DCJWY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 430.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8042-JVNFH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 351.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9985-MWVIX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 283.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4871-JTKJF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 89.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3422-LYEPQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 71.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 447.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1363-TXLSL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 441.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4550-EVXNY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 463.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0519-XUZJU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 416.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9605-WGJVW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 70.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7153-OANIO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 225.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0328-GRPMV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 42.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0488-GSLFR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 411.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9728-FTTVZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 0.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7254-IQWOZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 209.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2856-HYAPG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 68.0, "CustomerChurn[TotalCharges]": 68.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 417.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1031-IIDEO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 76.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1062-LHZOD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 285.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1447-GIQMR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 23.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7660-HDPJV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 491.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2446-PLQVO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 350.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4501-EQDRN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 492.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "6457-GIRWB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 241.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6502-MJQAE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 69.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 141.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1122-JWTJW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.0, "CustomerChurn[TotalCharges]": 70.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 482.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3413-BMNZE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 98.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "2135-RXIHG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 284.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6582-OIVSP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 391.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8705-WZCYL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 20.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5522-JBWMO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 228.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9244-ZVAPM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 361.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "0887-HJGAR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 365.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6982-SSHFK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 162.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9448-REEVD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 424.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "9117-SHLZX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 456.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3165-HDOEW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 289.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5552-ZNFSJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 405.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2833-SLKDQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 202.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4237-RLAQD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 223.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1478-VPOAD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 43.0, "CustomerChurn[TotalCharges]": 43.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 401.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6650-VJONK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 43.0, "CustomerChurn[TotalCharges]": 43.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 266.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "8080-DDEMJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 190.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8356-WUAOJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 319.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3669-OYSJI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 46.0, "CustomerChurn[TotalCharges]": 46.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 95.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1612-EOHDH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 108.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7054-LGEQW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 336.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3961-SXAXY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 67.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "3566-HJGPK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 435.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4193-ORFCL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 434.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9828-AOQLM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 446.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7065-YUNRY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 191.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5858-EAFCZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 159.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1895-QTKDO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 43.0, "CustomerChurn[TotalCharges]": 43.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 36.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "4706-DGAHW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 356.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5103-MHMHY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 106.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4373-VVHQL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 353.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1942-OQFRW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 287.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0415-MOSGF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 345.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4146-SVFUD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 485.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5696-QURRL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 77.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5692-FPTAH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 4.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5133-POWUA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 199.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5077-DXTCG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 473.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7593-XFKDI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 46.0, "CustomerChurn[TotalCharges]": 46.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 73.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7663-RGWBC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 281.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8950-MTZNV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 478.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8710-YGLWG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 185.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6128-CZOMY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 327.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6185-TASNN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 46.0, "CustomerChurn[TotalCharges]": 46.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 207.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7825-GKXMW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 219.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2903-YYTBW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 466.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7359-PTSXY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 431.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6959-UWKHF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 42.0, "CustomerChurn[TotalCharges]": 42.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 97.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8720-RQSBJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 300.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7754-IXRMC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 66.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2672-OJQZP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 372.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6145-NNPNO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 302.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "6595-COKXZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 87.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8180-AKMJV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 151.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "4855-SNKMY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 187.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7252-NTGSS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 16.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2082-CEFLT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 211.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6142-VSJQO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 177.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "2275-RBYQS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 427.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1976-CFOCS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 46.0, "CustomerChurn[TotalCharges]": 46.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 166.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4361-JEIVL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 173.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9214-EKVXR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 409.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "0082-LDZUE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 305.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4847-QNOKA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 44.0, "CustomerChurn[TotalCharges]": 44.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 134.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "1963-SVUCV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 75.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6127-IYJOZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 60.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3085-QUOZK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 43.0, "CustomerChurn[TotalCharges]": 43.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 452.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3926-CUQZX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 15.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "1024-GUALD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 443.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4195-NZGTA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 322.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6366-ZGQGL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 63.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "0021-IKXGC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 72.0, "CustomerChurn[TotalCharges]": 72.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 355.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6158-HDPXZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 146.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1452-VOQCH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 325.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8372-JUXUI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 176.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3276-HDUEG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 231.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9227-LUNBG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 290.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6513-EECDB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 73.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 184.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6358-LYNGM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 91.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7537-RBWEA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 488.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1768-ZAIFU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 288.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3334-CTHOL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 49.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 378.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "6960-HVYXR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.0, "CustomerChurn[TotalCharges]": 76.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 313.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7767-UXAGJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 132.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8445-DNBAE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 72.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5240-IJOQT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 79.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0661-XEYAN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 116.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1157-BQCUW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 248.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7442-YGZFK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 49.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 14.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "5834-ASPWA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 261.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8775-ERLNB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 129.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2538-OIMXF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 275.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9787-XVQIU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 1.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0248-IPDFW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 5.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7180-PISOG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 74.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2672-DZUOY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 259.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2609-IAICY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 77.0, "CustomerChurn[TotalCharges]": 77.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 309.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3707-GNWHM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 171.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4749-VFKVB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 55.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4102-OQUPX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 232.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2740-TVLFN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 334.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2209-XADXF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 265.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "6032-IGALN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 381.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9907-SWKKF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 270.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7365-BVCJH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 444.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4988-IQIGL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 131.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3746-EUBYR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 154.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "0612-RTZZA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 437.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8816-VXNZD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 244.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2103-ZRXFN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 143.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9136-ALYBR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 414.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8260-NGFNY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 25.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1833-VGRUM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 251.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1334-FJSVR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 102.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0023-HGHWL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 421.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4729-XKASR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 249.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9058-CBREO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 124.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9895-VFOXH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 196.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2982-IHMFT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 468.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7932-WPTDS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 497.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8473-VUVJN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 73.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 37.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2862-PFNIK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 480.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4367-NHWMM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 68.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3797-VTIDR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 23.0, "CustomerChurn[TotalCharges]": 23.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 481.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1496-GGSUK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 440.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3551-HUAZH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 368.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0616-ATFGB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 269.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3439-GVUSX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 454.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7242-QZLXF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 25.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 58.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9248-OJYKK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.0, "CustomerChurn[TotalCharges]": 76.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 115.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4415-IJZTP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 30.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5351-QESIO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 24.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 142.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "0723-DRCLG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 168.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6894-LFHLY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 174.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3091-FYHKI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 127.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1285-OKIPP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 323.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3583-EKAPL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 50.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9282-IZGQK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 165.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1448-PWKYE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 10.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8603-IJWDN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 86.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 321.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0841-NULXI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 198.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5673-FSSMF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 60.0, "CustomerChurn[TotalCharges]": 60.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 61.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3049-NDXFL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 475.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2018-QKYGT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 81.0, "CustomerChurn[TotalCharges]": 81.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 258.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9822-OAOVB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 277.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7854-FOKSF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 408.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1740-CSDJP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 367.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "4074-SJFFA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 54.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 218.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4727-MCYZG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 158.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2004-OCQXK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 81.0, "CustomerChurn[TotalCharges]": 81.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 393.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0495-RVCBF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 317.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5501-TVMGM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 462.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9124-LHCJQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 41.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7594-RQHXR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 126.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6086-ESGRL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 40.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "5275-SQEIZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 316.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8945-GRKHX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.0, "CustomerChurn[TotalCharges]": 78.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 358.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1069-XAIEM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 2.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4614-NUVZD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 81.0, "CustomerChurn[TotalCharges]": 81.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 354.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6629-CZTTH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 273.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5393-RXQSZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 22.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3841-CONLJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 413.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3063-QFSZL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 140.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2868-MZAGQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 92.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2867-UIMSS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 11.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3751-KTZEL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 423.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5909-ECHUI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 56.0, "CustomerChurn[TotalCharges]": 56.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 279.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6457-USBER", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 125.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5919-TMRGD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 387.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2232-DMLXU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 121.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5192-EBGOV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 268.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0970-ETWGE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 123.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3027-ZTDHO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 216.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7294-TMAOP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 472.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7439-DKZTW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 400.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5494-HECPR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 487.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6260-ONULR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 62.0, "CustomerChurn[TotalCharges]": 62.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 459.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6567-HOOPW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 122.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8580-AECUZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 227.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0375-HVGXO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 34.0, "CustomerChurn[TotalCharges]": 34.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 460.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3877-JRJIP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.0, "CustomerChurn[TotalCharges]": 59.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 330.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9497-QCMMS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.0, "CustomerChurn[TotalCharges]": 93.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 257.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9300-RENDD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 278.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3988-RQIXO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 91.0, "CustomerChurn[TotalCharges]": 91.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 82.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2514-GINMM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 304.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3722-WPXTK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.0, "CustomerChurn[TotalCharges]": 88.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 382.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4910-GMJOT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.0, "CustomerChurn[TotalCharges]": 94.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 453.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2725-KXXWT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 18.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3518-PZXZQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 331.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4826-XTSOH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 86.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 35.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6857-VWJDT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 95.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 9.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3801-HMYNL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 449.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1761-AEZZR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 320.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7120-RFMVS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 84.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 348.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2386-LAHRK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 53.0, "CustomerChurn[TotalCharges]": 53.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 451.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8149-RSOUN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.0, "CustomerChurn[TotalCharges]": 93.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 399.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9885-CSMWE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.0, "CustomerChurn[TotalCharges]": 78.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 255.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5178-LMXOP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 95.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 109.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7274-RTAPZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 43.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5960-WPXQM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 38.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6372-RFVNS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.0, "CustomerChurn[TotalCharges]": 78.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 233.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2777-PHDEI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.0, "CustomerChurn[TotalCharges]": 78.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 392.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5797-APWZC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 347.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9019-QVLZD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 264.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1455-ESIQH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 341.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0318-QUUOB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 369.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8740-CRYFY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.0, "CustomerChurn[TotalCharges]": 78.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 32.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9300-AGZNL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.0, "CustomerChurn[TotalCharges]": 94.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 208.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5378-IKEEG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 35.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 291.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9725-SCPZG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 490.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7577-SWIFR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 324.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3776-EKTKM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 36.0, "CustomerChurn[TotalCharges]": 36.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 195.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8058-INTPH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 204.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8821-XNHVZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 226.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1941-HOSAM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 186.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4273-MBHYA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 212.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7503-ZGUZJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 84.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 192.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4912-PIGUY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 84.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 53.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4929-BSTRX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 53.0, "CustomerChurn[TotalCharges]": 53.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 205.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1415-YFWLT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.0, "CustomerChurn[TotalCharges]": 89.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 206.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9507-EXLTT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 137.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "7568-PODML", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 45.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 363.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6521-YYTYI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.0, "CustomerChurn[TotalCharges]": 93.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 311.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4351-QLCSU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 55.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 375.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "0674-EYYZV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 54.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 147.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0295-PPHDO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 95.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 175.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 0, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7590-VHVEG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 29.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 133.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8665-UTDHZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 30.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 374.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6317-YPKDH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 29.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 117.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "9514-JDSKI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 40.0, "CustomerChurn[TotalCharges]": 40.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 476.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6905-NIQIN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 239.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5167-ZFFMM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 247.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "9399-APLBT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 183.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2207-NHRJK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 467.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4065-JJAVA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 49.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 298.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5868-CZJDR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 31.0, "CustomerChurn[TotalCharges]": 31.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 380.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7595-EUIVN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 420.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1866-OBPNR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 167.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "5054-IEXZT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 128.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0137-OCGAB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 80.0, "CustomerChurn[TotalCharges]": 80.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 48.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1845-ZLLIG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 328.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1406-PUQVY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 49.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 425.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2254-DLXRI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 238.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4317-VTEOA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 44.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6689-KXGBO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 50.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 179.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3178-FESZO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 100.0, "CustomerChurn[TotalCharges]": 100.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 470.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "2013-SGDXK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 84.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 31.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4274-OWWYO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 494.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3765-JXVKY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 315.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9840-EFJQB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 194.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6907-FLBER", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 54.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 299.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9752-ZNQUT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 48.0, "CustomerChurn[TotalCharges]": 48.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 312.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5196-SGOAK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 75.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 357.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4844-JJWUY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 86.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 477.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1628-BIZYP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 19.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8775-LHDJH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 113.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3296-SILRA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 76.0, "CustomerChurn[TotalCharges]": 76.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 217.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1977-STDKI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 73.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 471.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7493-TPUWZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 213.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9894-EZEWG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 74.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 33.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1471-GIQKQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 49.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 457.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6614-VBEGU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 1614.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 200.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "0823-HSCDJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 2550.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 221.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9505-SQFSW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 40.0, "CustomerChurn[TotalCharges]": 92.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 310.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5073-WXOYN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 3027.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 164.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8807-ARQET", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 41, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 40.0, "CustomerChurn[TotalCharges]": 1677.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 90.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "4468-KAZHE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 60.0, "CustomerChurn[TotalCharges]": 1259.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 271.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2625-TRCZQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 2553.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 439.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7721-JXEAW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 41.0, "CustomerChurn[TotalCharges]": 2452.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 370.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "1636-NTNCO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 207.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 461.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1104-FEJAM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 64.0, "CustomerChurn[TotalCharges]": 1802.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 254.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2636-OHFMN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 48.0, "CustomerChurn[TotalCharges]": 201.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 101.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2141-RRYGO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 68.0, "CustomerChurn[TotalCharges]": 261.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 474.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "3665-JATSN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 39.0, "CustomerChurn[TotalCharges]": 710.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 335.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7284-BUYEC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 229.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 47.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "2041-JIJCI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 64.0, "CustomerChurn[TotalCharges]": 370.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 465.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9026-LHEVG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 40.0, "CustomerChurn[TotalCharges]": 359.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 389.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3329-WDIOK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 155.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 455.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2187-LZGPL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 40.0, "CustomerChurn[TotalCharges]": 293.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 107.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "6217-TOWGS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 1322.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 318.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "1100-DDVRV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 836.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 308.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3669-LVWZB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 305.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 272.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7502-BNYGS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 3168.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 343.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "0980-PVMRC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 2036.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 333.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2969-QWUBZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 96.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 180.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9693-XMUOB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 2997.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 339.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0212-ISBBF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 1098.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 88.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5438-QMDDL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 59.0, "CustomerChurn[TotalCharges]": 1130.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 189.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "3999-WRNGR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 3069.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 153.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6778-YSNIH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.0, "CustomerChurn[TotalCharges]": 114.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 188.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0319-QZTCO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 58.0, "CustomerChurn[TotalCharges]": 168.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 464.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1697-BCSHV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 66.0, "CustomerChurn[TotalCharges]": 3970.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 93.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "4628-CTTLA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 39.0, "CustomerChurn[TotalCharges]": 2111.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 99.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2436-QBZFP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 39.0, "CustomerChurn[TotalCharges]": 849.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 84.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1862-SKORY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 39.0, "CustomerChurn[TotalCharges]": 1637.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 215.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9633-DENPU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 58.0, "CustomerChurn[TotalCharges]": 2723.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 498.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "5424-RLQLC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 59.0, "CustomerChurn[TotalCharges]": 638.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 39.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "2931-FSOHN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.0, "CustomerChurn[TotalCharges]": 788.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 383.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6218-KNUBD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.0, "CustomerChurn[TotalCharges]": 357.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 27.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0786-VSSUD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 39.0, "CustomerChurn[TotalCharges]": 679.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 130.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5948-UJZLF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 97.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 245.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4827-USJHP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 1023.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 301.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8017-UVSZU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 56.0, "CustomerChurn[TotalCharges]": 2379.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 26.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1251-KRREG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 114.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 486.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "4130-MZLCC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 244.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 438.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "8229-MYEJZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 498.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 395.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6235-VDHOM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 28.0, "CustomerChurn[TotalCharges]": 131.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 286.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6543-CPZMK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 248.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 397.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1456-TWCGB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 208.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 433.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9342-VNIMQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 1665.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 489.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "0811-GSDTP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 382.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 57.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8919-FYFQZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 1359.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 65.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3097-NNSPB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 91.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 148.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "3391-JSQEW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 2058.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 344.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8791-GFXLZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 593.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 366.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "2446-ZKVAF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 56.0, "CustomerChurn[TotalCharges]": 1074.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 394.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "8967-SZQAS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 765.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 276.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6789-HJBWG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 611.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 371.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9992-UJOEL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 92.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 493.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6625-UTXEW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 612.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 83.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5651-WYIPH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 865.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 262.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "2586-CWXVV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 1621.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 229.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5423-BHIXO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 32, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 1739.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 24.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8069-YQQAJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 31.0, "CustomerChurn[TotalCharges]": 419.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 404.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7776-QWNFX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 1527.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 161.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "6637-KYRCV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 167.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 120.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3723-BFBGR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 1291.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 100.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "8901-HJXTF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 309.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 220.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5156-UMKOW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 90.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 445.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1247-QBVSH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 2169.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 201.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7389-KBFIT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 63.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 144.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9163-GHAYE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 48.0, "CustomerChurn[TotalCharges]": 736.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 118.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1322-AGOQM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 1380.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 139.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "1432-FPAXX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 856.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 7.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7636-OWBPG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 381.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 349.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "3082-VQXNH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 94.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 21.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "5402-HTOTQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 875.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 3.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2108-YKQTY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 151.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 297.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "0975-VOOVL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 98.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 59.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "8148-BPLZQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 1734.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 246.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3209-ZPKFI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 2538.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 495.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7579-OOPEC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 115.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 8.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "8805-JNRAZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 103.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 406.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5816-SCGFC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 419.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 458.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7421-ZLUPA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 226.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 314.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5404-GGUKR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 262.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 280.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3345-PBBFH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 393.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 210.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "1226-UDFZR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 114.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 402.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9415-TPKRV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 446.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 303.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7501-VTYLJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 106.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 376.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7740-KKCXF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 1529.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 64.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "2606-RMDHZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 208.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 294.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "4353-HYOJD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 1336.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 418.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1078-TDCRN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 30.0, "CustomerChurn[TotalCharges]": 82.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 69.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8718-PTMEZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 31.0, "CustomerChurn[TotalCharges]": 347.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 178.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1114-CENIM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 3092.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 496.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "3173-NVMPX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 501.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 240.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6339-DKLMK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 31.0, "CustomerChurn[TotalCharges]": 389.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 52.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3873-NFTGI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.0, "CustomerChurn[TotalCharges]": 767.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 193.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "3570-YUEKJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 42, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 2077.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 236.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3538-WZPHD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 79.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 29.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7054-ENNGU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 466.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 13.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "9881-VCZEP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 1373.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 197.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8654-DHAOW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 101.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 263.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7872-RDDLZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.0, "CustomerChurn[TotalCharges]": 3725.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 54.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6048-QBXKL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 56.0, "CustomerChurn[TotalCharges]": 118.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 250.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 2, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "3256-EZDBI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 1459.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 306.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "8344-WFMFH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.0, "CustomerChurn[TotalCharges]": 484.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 432.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1395-OFUWC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 1224.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 293.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "1442-BQPVU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": 0, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.0, "CustomerChurn[TotalCharges]": 357.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 203.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 1, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1596-OQSPS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.0, "CustomerChurn[TotalCharges]": 531.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 6.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2843-CQMEG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 1218.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 499.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6304-IJFSQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.0, "CustomerChurn[TotalCharges]": 130.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 135.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 0, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "0094-OIFMO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 1120.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 412.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9947-OTFQU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 1074.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 385.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3488-PGMQJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 606.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 386.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7982-VCELR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 94.0, "CustomerChurn[TotalCharges]": 3565.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 214.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "6862-CQUMB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 96.0, "CustomerChurn[TotalCharges]": 3646.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 163.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "6599-CEBNN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 2524.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 329.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "0111-KLBQG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 32, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 93.0, "CustomerChurn[TotalCharges]": 2861.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 307.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7916-VCCPB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 1195.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 390.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "0578-SKVMF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 83.0, "CustomerChurn[TotalCharges]": 1845.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 114.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5949-XIKAE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 83.0, "CustomerChurn[TotalCharges]": 680.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 157.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "6986-IJDHX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 3266.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 296.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "1216-JWVUX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 1901.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 182.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2189-WWOEW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 1269.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 384.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "3138-BKYAV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 489.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 267.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0947-MUGVO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 1463.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 352.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "9944-HKVVB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 307.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 379.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "1907-UBQFC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 72.0, "CustomerChurn[TotalCharges]": 688.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 360.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5146-CBVOE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 1212.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 364.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "8584-KMVXD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 535.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 110.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5651-YLPRD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 1, "CustomerChurn[tenure]": 32, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 2723.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 242.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8242-SOQUO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 392.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 243.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3733-LSYCE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 1114.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 450.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "9793-WECQC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 2192.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 429.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "5899-OUVKV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.0, "CustomerChurn[TotalCharges]": 2979.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 49.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2984-AFWNC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 293.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 155.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2761-OCIAX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 165.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 415.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8017-LXHFA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.0, "CustomerChurn[TotalCharges]": 2293.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 230.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5035-BVCXS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 866.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 17.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "6407-UTSLV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 83.0, "CustomerChurn[TotalCharges]": 163.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 224.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "5318-IXUZF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 87.0, "CustomerChurn[TotalCharges]": 183.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 119.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 3}, {"CustomerChurn[customerID]": "8496-EJAUI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.0, "CustomerChurn[TotalCharges]": 1424.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 96.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}, {"CustomerChurn[customerID]": "4143-HHPMK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 4338.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 340.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "0923-PNFUB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 0, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 83.0, "CustomerChurn[TotalCharges]": 247.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 222.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "3365-SAIGS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 83.0, "CustomerChurn[TotalCharges]": 1329.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 410.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "5989-PGKJB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 1340.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 86.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "8337-MSSXB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 1180.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 295.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2528-HFYZX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.0, "CustomerChurn[TotalCharges]": 1233.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 138.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "2135-DQWAQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 420.0, "CustomerChurn[Churn]": 0, "CustomerChurn[customerID]_stringindexer_transform": 62.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 1}, {"CustomerChurn[customerID]": "7548-SEPYI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": 0, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.0, "CustomerChurn[TotalCharges]": 512.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 398.0, "CustomerChurn[gender]_stringindexer_transform": 0, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 1, "CustomerChurn[StreamingMovies]_stringindexer_transform": 1, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 0}, {"CustomerChurn[customerID]": "7503-QQRVF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": 1, "CustomerChurn[Dependents]": 0, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": 1, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": 1, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.0, "CustomerChurn[TotalCharges]": 1178.0, "CustomerChurn[Churn]": 1, "CustomerChurn[customerID]_stringindexer_transform": 253.0, "CustomerChurn[gender]_stringindexer_transform": 1, "CustomerChurn[MultipleLines]_stringindexer_transform": 0, "CustomerChurn[InternetService]_stringindexer_transform": 1, "CustomerChurn[OnlineSecurity]_stringindexer_transform": 0, "CustomerChurn[OnlineBackup]_stringindexer_transform": 1, "CustomerChurn[DeviceProtection]_stringindexer_transform": 0, "CustomerChurn[TechSupport]_stringindexer_transform": 0, "CustomerChurn[StreamingTV]_stringindexer_transform": 0, "CustomerChurn[StreamingMovies]_stringindexer_transform": 0, "CustomerChurn[Contract]_stringindexer_transform": 0, "CustomerChurn[PaymentMethod]_stringindexer_transform": 2}], "FE": [{"transformationsData": [{"feature_label": "CustomerChurn[customerID]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[customerID]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "0021-IKXGC", "max": "9992-UJOEL", "missing": "0", "distinct": "500"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[customerID]"}, {"transformationsData": [{"feature_label": "CustomerChurn[gender]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[gender]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Female", "max": "Male", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[gender]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[SeniorCitizen]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.2", "stddev": "0.4", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[SeniorCitiz..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Partner]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Partner]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Dependents]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.15", "stddev": "0.36", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Dependents]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[tenure]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "6.53", "stddev": "12.57", "min": "1", "max": "67", "missing": "0"}, "updatedLabel": "CustomerChurn[tenure]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[PhoneService]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.81", "stddev": "0.39", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[PhoneServic..."}, {"transformationsData": [{"feature_label": "CustomerChurn[MultipleLines]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[MultipleLines]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "3"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[MultipleLin..."}, {"transformationsData": [{"feature_label": "CustomerChurn[InternetService]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[InternetService]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "DSL", "max": "Fiber optic", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[InternetSer..."}, {"transformationsData": [{"feature_label": "CustomerChurn[OnlineSecurity]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[OnlineSecurity]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[OnlineSecur..."}, {"transformationsData": [{"feature_label": "CustomerChurn[OnlineBackup]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[OnlineBackup]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[OnlineBacku..."}, {"transformationsData": [{"feature_label": "CustomerChurn[DeviceProtection]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[DeviceProtection]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[DeviceProte..."}, {"transformationsData": [{"feature_label": "CustomerChurn[TechSupport]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[TechSupport]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[TechSupport..."}, {"transformationsData": [{"feature_label": "CustomerChurn[StreamingTV]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[StreamingTV]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[StreamingTV..."}, {"transformationsData": [{"feature_label": "CustomerChurn[StreamingMovies]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[StreamingMovies]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[StreamingMo..."}, {"transformationsData": [{"feature_label": "CustomerChurn[Contract]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[Contract]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Month-to-month", "max": "Month-to-month", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[Contract]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[PaperlessBilling]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.7", "stddev": "0.46", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[PaperlessBi..."}, {"transformationsData": [{"feature_label": "CustomerChurn[PaymentMethod]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[PaymentMethod]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Bank transfer (automatic)", "max": "Mailed check", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[PaymentMeth..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[MonthlyCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "60.22", "stddev": "19.34", "min": "23.45", "max": "100.25", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[MonthlyChar..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[TotalCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "370.74", "stddev": "721.08", "min": "23.45", "max": "4338.6", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[TotalCharge..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Churn]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Churn]"}, {"feature": "CustomerChurn[customerID]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "249.5", "stddev": "144.48", "min": "0.0", "max": "499.0", "missing": "0"}, "updatedLabel": "CustomerChurn[customerID]..."}, {"feature": "CustomerChurn[gender]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.48", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[gender]_str..."}, {"feature": "CustomerChurn[MultipleLines]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.52", "stddev": "0.76", "min": "0", "max": "2", "missing": "0"}, "updatedLabel": "CustomerChurn[MultipleLin..."}, {"feature": "CustomerChurn[InternetService]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.48", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[InternetSer..."}, {"feature": "CustomerChurn[OnlineSecurity]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[OnlineSecur..."}, {"feature": "CustomerChurn[OnlineBackup]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.37", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[OnlineBacku..."}, {"feature": "CustomerChurn[DeviceProtection]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[DeviceProte..."}, {"feature": "CustomerChurn[TechSupport]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[TechSupport..."}, {"feature": "CustomerChurn[StreamingTV]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.42", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[StreamingTV..."}, {"feature": "CustomerChurn[StreamingMovies]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.21", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[StreamingMo..."}, {"feature": "CustomerChurn[Contract]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[Contract]_s..."}, {"feature": "CustomerChurn[PaymentMethod]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.9", "min": "0", "max": "3", "missing": "0"}, "updatedLabel": "CustomerChurn[PaymentMeth..."}], "samplecount": 500, "message": "Successfully executed", "status": 1, "userid": "3728edb5-ec63-468b-9cf0-eca3719e7fe5", "FEGraph": [{"values": {"label": ["0390-DCFDQ", "5940-AHUHD", "5583-SXDAG", "4110-PFEUZ", "8040-MNRTF", "1820-TQVEV", "5875-YPQFJ", "7206-GZCDC", "8375-DKEBR", "9804-ICWBG", "8380-PEFPE", "3494-JCHRQ", "8000-REIQB", "8309-IEYJD", "3177-LASXD", "1084-UQCHV", "8051-HJRLT", "0151-ONTOV", "6140-QNRQQ", "1846-XWOQN", "9603-OAIHC", "5186-SAMNZ", "2262-SLNVK", "5539-TMZLF", "7409-KIUTL", "0679-IDSTG", "5542-TBBWB", "1086-LXKFY", "2636-ALXXZ", "1640-PLFMP", "9617-INGJY", "4510-HIMLV", "3878-AVSOQ", "3716-BDVDB", "9488-HGMJH", "0968-GSIKN", "4806-HIPDW", "8644-XLFBW", "0812-WUPTB", "3871-IKPYH", "2920-RNCEZ", "1915-IOFGU", "7665-TOALD", "6416-TVAIH", "3066-RRJIO", "0515-YPMCW", "4603-JANFB", "7908-QCBCA", "7465-ZZRVX", "4702-IOQDC", "3428-XZMAZ", "1853-UDXBW", "5032-MIYKT", "0511-JTEOY", "5134-IKDAY", "5884-GCYMI", "6653-CBBOM", "4759-TRPLW", "8062-YBDOE", "5376-DEQCP", "2506-TNFCO", "2619-WFQWU", "5550-VFRLC", "3244-DCJWY", "8042-JVNFH", "9985-MWVIX", "4871-JTKJF", "3422-LYEPQ", "1363-TXLSL", "4550-EVXNY", "0519-XUZJU", "9605-WGJVW", "7153-OANIO", "0328-GRPMV", "0488-GSLFR", "9728-FTTVZ", "7254-IQWOZ", "2856-HYAPG", "1031-IIDEO", "1062-LHZOD", "1447-GIQMR", "7660-HDPJV", "2446-PLQVO", "4501-EQDRN", "6457-GIRWB", "6502-MJQAE", "1122-JWTJW", "3413-BMNZE", "2135-RXIHG", "6582-OIVSP", "8705-WZCYL", "5522-JBWMO", "9244-ZVAPM", "0887-HJGAR", "6982-SSHFK", "9448-REEVD", "9117-SHLZX", "3165-HDOEW", "5552-ZNFSJ", "2833-SLKDQ", "4237-RLAQD", "1478-VPOAD", "6650-VJONK", "8080-DDEMJ", "8356-WUAOJ", "3669-OYSJI", "1612-EOHDH", "7054-LGEQW", "3961-SXAXY", "3566-HJGPK", "4193-ORFCL", "9828-AOQLM", "7065-YUNRY", "5858-EAFCZ", "1895-QTKDO", "4706-DGAHW", "5103-MHMHY", "4373-VVHQL", "1942-OQFRW", "0415-MOSGF", "4146-SVFUD", "5696-QURRL", "5692-FPTAH", "5133-POWUA", "5077-DXTCG", "7593-XFKDI", "7663-RGWBC", "8950-MTZNV", "8710-YGLWG", "6128-CZOMY", "6185-TASNN", "7825-GKXMW", "2903-YYTBW", "7359-PTSXY", "6959-UWKHF", "8720-RQSBJ", "7754-IXRMC", "2672-OJQZP", "6145-NNPNO", "6595-COKXZ", "8180-AKMJV", "4855-SNKMY", "7252-NTGSS", "2082-CEFLT", "6142-VSJQO", "2275-RBYQS", "1976-CFOCS", "4361-JEIVL", "9214-EKVXR", "0082-LDZUE", "4847-QNOKA", "1963-SVUCV", "6127-IYJOZ", "3085-QUOZK", "3926-CUQZX", "1024-GUALD", "4195-NZGTA", "6366-ZGQGL", "0021-IKXGC", "6158-HDPXZ", "1452-VOQCH", "8372-JUXUI", "3276-HDUEG", "9227-LUNBG", "6513-EECDB", "6358-LYNGM", "7537-RBWEA", "1768-ZAIFU", "3334-CTHOL", "6960-HVYXR", "7767-UXAGJ", "8445-DNBAE", "5240-IJOQT", "0661-XEYAN", "1157-BQCUW", "7442-YGZFK", "5834-ASPWA", "8775-ERLNB", "2538-OIMXF", "9787-XVQIU", "0248-IPDFW", "7180-PISOG", "2672-DZUOY", "2609-IAICY", "3707-GNWHM", "4749-VFKVB", "4102-OQUPX", "2740-TVLFN", "2209-XADXF", "6032-IGALN", "9907-SWKKF", "7365-BVCJH", "4988-IQIGL", "3746-EUBYR", "0612-RTZZA", "8816-VXNZD", "2103-ZRXFN", "9136-ALYBR", "8260-NGFNY", "1833-VGRUM", "1334-FJSVR", "0023-HGHWL", "4729-XKASR", "9058-CBREO", "9895-VFOXH", "2982-IHMFT", "7932-WPTDS", "8473-VUVJN", "2862-PFNIK", "4367-NHWMM", "3797-VTIDR", "1496-GGSUK", "3551-HUAZH", "0616-ATFGB", "3439-GVUSX", "7242-QZLXF", "9248-OJYKK", "4415-IJZTP", "5351-QESIO", "0723-DRCLG", "6894-LFHLY", "3091-FYHKI", "1285-OKIPP", "3583-EKAPL", "9282-IZGQK", "1448-PWKYE", "8603-IJWDN", "0841-NULXI", "5673-FSSMF", "3049-NDXFL", "2018-QKYGT", "9822-OAOVB", "7854-FOKSF", "1740-CSDJP", "4074-SJFFA", "4727-MCYZG", "2004-OCQXK", "0495-RVCBF", "5501-TVMGM", "9124-LHCJQ", "7594-RQHXR", "6086-ESGRL", "5275-SQEIZ", "8945-GRKHX", "1069-XAIEM", "4614-NUVZD", "6629-CZTTH", "5393-RXQSZ", "3841-CONLJ", "3063-QFSZL", "2868-MZAGQ", "2867-UIMSS", "3751-KTZEL", "5909-ECHUI", "6457-USBER", "5919-TMRGD", "2232-DMLXU", "5192-EBGOV", "0970-ETWGE", "3027-ZTDHO", "7294-TMAOP", "7439-DKZTW", "5494-HECPR", "6260-ONULR", "6567-HOOPW", "8580-AECUZ", "0375-HVGXO", "3877-JRJIP", "9497-QCMMS", "9300-RENDD", "3988-RQIXO", "2514-GINMM", "3722-WPXTK", "4910-GMJOT", "2725-KXXWT", "3518-PZXZQ", "4826-XTSOH", "6857-VWJDT", "3801-HMYNL", "1761-AEZZR", "7120-RFMVS", "2386-LAHRK", "8149-RSOUN", "9885-CSMWE", "5178-LMXOP", "7274-RTAPZ", "5960-WPXQM", "6372-RFVNS", "2777-PHDEI", "5797-APWZC", "9019-QVLZD", "1455-ESIQH", "0318-QUUOB", "8740-CRYFY", "9300-AGZNL", "5378-IKEEG", "9725-SCPZG", "7577-SWIFR", "3776-EKTKM", "8058-INTPH", "8821-XNHVZ", "1941-HOSAM", "4273-MBHYA", "7503-ZGUZJ", "4912-PIGUY", "4929-BSTRX", "1415-YFWLT", "9507-EXLTT", "7568-PODML", "6521-YYTYI", "4351-QLCSU", "0674-EYYZV", "0295-PPHDO", "7590-VHVEG", "8665-UTDHZ", "6317-YPKDH", "9514-JDSKI", "6905-NIQIN", "5167-ZFFMM", "9399-APLBT", "2207-NHRJK", "4065-JJAVA", "5868-CZJDR", "7595-EUIVN", "1866-OBPNR", "5054-IEXZT", "0137-OCGAB", "1845-ZLLIG", "1406-PUQVY", "2254-DLXRI", "4317-VTEOA", "6689-KXGBO", "3178-FESZO", "2013-SGDXK", "4274-OWWYO", "3765-JXVKY", "9840-EFJQB", "6907-FLBER", "9752-ZNQUT", "5196-SGOAK", "4844-JJWUY", "1628-BIZYP", "8775-LHDJH", "3296-SILRA", "1977-STDKI", "7493-TPUWZ", "9894-EZEWG", "1471-GIQKQ", "6614-VBEGU", "0823-HSCDJ", "9505-SQFSW", "5073-WXOYN", "8807-ARQET", "4468-KAZHE", "2625-TRCZQ", "7721-JXEAW", "1636-NTNCO", "1104-FEJAM", "2636-OHFMN", "2141-RRYGO", "3665-JATSN", "7284-BUYEC", "2041-JIJCI", "9026-LHEVG", "3329-WDIOK", "2187-LZGPL", "6217-TOWGS", "1100-DDVRV", "3669-LVWZB", "7502-BNYGS", "0980-PVMRC", "2969-QWUBZ", "9693-XMUOB", "0212-ISBBF", "5438-QMDDL", "3999-WRNGR", "6778-YSNIH", "0319-QZTCO", "1697-BCSHV", "4628-CTTLA", "2436-QBZFP", "1862-SKORY", "9633-DENPU", "5424-RLQLC", "2931-FSOHN", "6218-KNUBD", "0786-VSSUD", "5948-UJZLF", "4827-USJHP", "8017-UVSZU", "1251-KRREG", "4130-MZLCC", "8229-MYEJZ", "6235-VDHOM", "6543-CPZMK", "1456-TWCGB", "9342-VNIMQ", "0811-GSDTP", "8919-FYFQZ", "3097-NNSPB", "3391-JSQEW", "8791-GFXLZ", "2446-ZKVAF", "8967-SZQAS", "6789-HJBWG", "9992-UJOEL", "6625-UTXEW", "5651-WYIPH", "2586-CWXVV", "5423-BHIXO", "8069-YQQAJ", "7776-QWNFX", "6637-KYRCV", "3723-BFBGR", "8901-HJXTF", "5156-UMKOW", "1247-QBVSH", "7389-KBFIT", "9163-GHAYE", "1322-AGOQM", "1432-FPAXX", "7636-OWBPG", "3082-VQXNH", "5402-HTOTQ", "2108-YKQTY", "0975-VOOVL", "8148-BPLZQ", "3209-ZPKFI", "7579-OOPEC", "8805-JNRAZ", "5816-SCGFC", "7421-ZLUPA", "5404-GGUKR", "3345-PBBFH", "1226-UDFZR", "9415-TPKRV", "7501-VTYLJ", "7740-KKCXF", "2606-RMDHZ", "4353-HYOJD", "1078-TDCRN", "8718-PTMEZ", "1114-CENIM", "3173-NVMPX", "6339-DKLMK", "3873-NFTGI", "3570-YUEKJ", "3538-WZPHD", "7054-ENNGU", "9881-VCZEP", "8654-DHAOW", "7872-RDDLZ", "6048-QBXKL", "3256-EZDBI", "8344-WFMFH", "1395-OFUWC", "1442-BQPVU", "1596-OQSPS", "2843-CQMEG", "6304-IJFSQ", "0094-OIFMO", "9947-OTFQU", "3488-PGMQJ", "7982-VCELR", "6862-CQUMB", "6599-CEBNN", "0111-KLBQG", "7916-VCCPB", "0578-SKVMF", "5949-XIKAE", "6986-IJDHX", "1216-JWVUX", "2189-WWOEW", "3138-BKYAV", "0947-MUGVO", "9944-HKVVB", "1907-UBQFC", "5146-CBVOE", "8584-KMVXD", "5651-YLPRD", "8242-SOQUO", "3733-LSYCE", "9793-WECQC", "5899-OUVKV", "2984-AFWNC", "2761-OCIAX", "8017-LXHFA", "5035-BVCXS", "6407-UTSLV", "5318-IXUZF", "8496-EJAUI", "4143-HHPMK", "0923-PNFUB", "3365-SAIGS", "5989-PGKJB", "8337-MSSXB", "2528-HFYZX", "2135-DQWAQ", "7548-SEPYI", "7503-QQRVF"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "CustomerChurn[customerID]", "count": 500, "min": "0021-IKXGC", "max": "9992-UJOEL"}, {"values": {"label": ["Female", "Male"], "data": [258, 242]}, "label": "CustomerChurn[gender]", "count": 2, "min": "Female", "max": "Male"}, {"values": {"label": ["1", "0"], "data": [102, 398]}, "label": "CustomerChurn[SeniorCitizen]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1", "0"], "data": [110, 390]}, "label": "CustomerChurn[Partner]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [424, 76]}, "label": "CustomerChurn[Dependents]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1.0 - 7.6", "7.6 - 14.2", "14.2 - 20.8", "20.8 - 27.4", "27.4 - 34.0", "34.0 - 40.6", "40.6 - 47.2", "47.2 - 53.8", "53.8 - 60.4", "60.4 - 67"], "data": [396, 31, 22, 11, 8, 9, 9, 5, 8, 1]}, "label": "CustomerChurn[tenure]", "count": 10, "min": 1.0, "max": 67}, {"values": {"label": ["1", "0"], "data": [406, 94]}, "label": "CustomerChurn[PhoneService]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["No", "No phone service", "Yes"], "data": [323, 94, 83]}, "label": "CustomerChurn[MultipleLines]", "count": 3, "min": "No", "max": "Yes"}, {"values": {"label": ["Fiber optic", "DSL"], "data": [239, 261]}, "label": "CustomerChurn[InternetService]", "count": 2, "min": "DSL", "max": "Fiber optic"}, {"values": {"label": ["No"], "data": [500]}, "label": "CustomerChurn[OnlineSecurity]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No", "Yes"], "data": [313, 187]}, "label": "CustomerChurn[OnlineBackup]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["No"], "data": [500]}, "label": "CustomerChurn[DeviceProtection]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No"], "data": [500]}, "label": "CustomerChurn[TechSupport]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No", "Yes"], "data": [389, 111]}, "label": "CustomerChurn[StreamingTV]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["No", "Yes"], "data": [394, 106]}, "label": "CustomerChurn[StreamingMovies]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["Month-to-month"], "data": [500]}, "label": "CustomerChurn[Contract]", "count": 1, "min": "Month-to-month", "max": "Month-to-month"}, {"values": {"label": ["1", "0"], "data": [349, 151]}, "label": "CustomerChurn[PaperlessBilling]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["Mailed check", "Electronic check", "Bank transfer (automatic)", "Credit card (automatic)"], "data": [131, 296, 35, 38]}, "label": "CustomerChurn[PaymentMethod]", "count": 4, "min": "Bank transfer (automatic)", "max": "Mailed check"}, {"values": {"label": ["23.0 - 30.7", "30.7 - 38.4", "38.4 - 46.1", "46.1 - 53.8", "53.8 - 61.5", "61.5 - 69.2", "69.2 - 76.9", "76.9 - 84.6", "84.6 - 92.3", "92.3 - 100.0"], "data": [55, 13, 80, 66, 39, 50, 97, 46, 35, 19]}, "label": "CustomerChurn[MonthlyCharges]", "count": 10, "min": 23.0, "max": 100.0}, {"values": {"label": ["23.0 - 454.5", "454.5 - 886.0", "886.0 - 1317.5", "1317.5 - 1749.0", "1749.0 - 2180.5", "2180.5 - 2612.0", "2612.0 - 3043.5", "3043.5 - 3475.0", "3475.0 - 3906.5", "3906.5 - 4338.0"], "data": [406, 27, 17, 19, 8, 8, 6, 4, 3, 2]}, "label": "CustomerChurn[TotalCharges]", "count": 10, "min": 23.0, "max": 4338.0}, {"values": {"label": ["1", "0"], "data": [312, 188]}, "label": "CustomerChurn[Churn]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0.0 - 49.9", "49.9 - 99.8", "99.8 - 149.7", "149.7 - 199.6", "199.6 - 249.5", "249.5 - 299.4", "299.4 - 349.3", "349.3 - 399.2", "399.2 - 449.1", "449.1 - 499.0"], "data": [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]}, "label": "CustomerChurn[customerID]_stringindexer_transform", "count": 10, "min": 0.0, "max": 499.0}, {"values": {"label": ["0", "1"], "data": [258, 242]}, "label": "CustomerChurn[gender]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1", "2"], "data": [323, 94, 83]}, "label": "CustomerChurn[MultipleLines]_stringindexer_transform", "count": 3, "min": "0", "max": "2"}, {"values": {"label": ["1", "0"], "data": [239, 261]}, "label": "CustomerChurn[InternetService]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[OnlineSecurity]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [313, 187]}, "label": "CustomerChurn[OnlineBackup]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[DeviceProtection]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[TechSupport]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [389, 111]}, "label": "CustomerChurn[StreamingTV]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [394, 106]}, "label": "CustomerChurn[StreamingMovies]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[Contract]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["1", "0", "3", "2"], "data": [131, 296, 35, 38]}, "label": "CustomerChurn[PaymentMethod]_stringindexer_transform", "count": 4, "min": "0", "max": "3"}], "stageId": "649c00cae61a96675bcdf6dc", "FESamplePath": "/FileStore/platform/sampleData/649c00cae61a96675bcdf6dc_AutoFE/part-00000-0ee7abe7-2ac6-4a3d-8695-e90a551d21e5-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/649c00cae61a96675bcdf6dc_AutoFE/part-00000-0ee7abe7-2ac6-4a3d-8695-e90a551d21e5-c000.csv", "originalcount": 7043, "graphdata": {"CustomerChurn[customerID]": {"label": ["0390-DCFDQ", "5940-AHUHD", "5583-SXDAG", "4110-PFEUZ", "8040-MNRTF", "1820-TQVEV", "5875-YPQFJ", "7206-GZCDC", "8375-DKEBR", "9804-ICWBG", "8380-PEFPE", "3494-JCHRQ", "8000-REIQB", "8309-IEYJD", "3177-LASXD", "1084-UQCHV", "8051-HJRLT", "0151-ONTOV", "6140-QNRQQ", "1846-XWOQN", "9603-OAIHC", "5186-SAMNZ", "2262-SLNVK", "5539-TMZLF", "7409-KIUTL", "0679-IDSTG", "5542-TBBWB", "1086-LXKFY", "2636-ALXXZ", "1640-PLFMP", "9617-INGJY", "4510-HIMLV", "3878-AVSOQ", "3716-BDVDB", "9488-HGMJH", "0968-GSIKN", "4806-HIPDW", "8644-XLFBW", "0812-WUPTB", "3871-IKPYH", "2920-RNCEZ", "1915-IOFGU", "7665-TOALD", "6416-TVAIH", "3066-RRJIO", "0515-YPMCW", "4603-JANFB", "7908-QCBCA", "7465-ZZRVX", "4702-IOQDC", "3428-XZMAZ", "1853-UDXBW", "5032-MIYKT", "0511-JTEOY", "5134-IKDAY", "5884-GCYMI", "6653-CBBOM", "4759-TRPLW", "8062-YBDOE", "5376-DEQCP", "2506-TNFCO", "2619-WFQWU", "5550-VFRLC", "3244-DCJWY", "8042-JVNFH", "9985-MWVIX", "4871-JTKJF", "3422-LYEPQ", "1363-TXLSL", "4550-EVXNY", "0519-XUZJU", "9605-WGJVW", "7153-OANIO", "0328-GRPMV", "0488-GSLFR", "9728-FTTVZ", "7254-IQWOZ", "2856-HYAPG", "1031-IIDEO", "1062-LHZOD", "1447-GIQMR", "7660-HDPJV", "2446-PLQVO", "4501-EQDRN", "6457-GIRWB", "6502-MJQAE", "1122-JWTJW", "3413-BMNZE", "2135-RXIHG", "6582-OIVSP", "8705-WZCYL", "5522-JBWMO", "9244-ZVAPM", "0887-HJGAR", "6982-SSHFK", "9448-REEVD", "9117-SHLZX", "3165-HDOEW", "5552-ZNFSJ", "2833-SLKDQ", "4237-RLAQD", "1478-VPOAD", "6650-VJONK", "8080-DDEMJ", "8356-WUAOJ", "3669-OYSJI", "1612-EOHDH", "7054-LGEQW", "3961-SXAXY", "3566-HJGPK", "4193-ORFCL", "9828-AOQLM", "7065-YUNRY", "5858-EAFCZ", "1895-QTKDO", "4706-DGAHW", "5103-MHMHY", "4373-VVHQL", "1942-OQFRW", "0415-MOSGF", "4146-SVFUD", "5696-QURRL", "5692-FPTAH", "5133-POWUA", "5077-DXTCG", "7593-XFKDI", "7663-RGWBC", "8950-MTZNV", "8710-YGLWG", "6128-CZOMY", "6185-TASNN", "7825-GKXMW", "2903-YYTBW", "7359-PTSXY", "6959-UWKHF", "8720-RQSBJ", "7754-IXRMC", "2672-OJQZP", "6145-NNPNO", "6595-COKXZ", "8180-AKMJV", "4855-SNKMY", "7252-NTGSS", "2082-CEFLT", "6142-VSJQO", "2275-RBYQS", "1976-CFOCS", "4361-JEIVL", "9214-EKVXR", "0082-LDZUE", "4847-QNOKA", "1963-SVUCV", "6127-IYJOZ", "3085-QUOZK", "3926-CUQZX", "1024-GUALD", "4195-NZGTA", "6366-ZGQGL", "0021-IKXGC", "6158-HDPXZ", "1452-VOQCH", "8372-JUXUI", "3276-HDUEG", "9227-LUNBG", "6513-EECDB", "6358-LYNGM", "7537-RBWEA", "1768-ZAIFU", "3334-CTHOL", "6960-HVYXR", "7767-UXAGJ", "8445-DNBAE", "5240-IJOQT", "0661-XEYAN", "1157-BQCUW", "7442-YGZFK", "5834-ASPWA", "8775-ERLNB", "2538-OIMXF", "9787-XVQIU", "0248-IPDFW", "7180-PISOG", "2672-DZUOY", "2609-IAICY", "3707-GNWHM", "4749-VFKVB", "4102-OQUPX", "2740-TVLFN", "2209-XADXF", "6032-IGALN", "9907-SWKKF", "7365-BVCJH", "4988-IQIGL", "3746-EUBYR", "0612-RTZZA", "8816-VXNZD", "2103-ZRXFN", "9136-ALYBR", "8260-NGFNY", "1833-VGRUM", "1334-FJSVR", "0023-HGHWL", "4729-XKASR", "9058-CBREO", "9895-VFOXH", "2982-IHMFT", "7932-WPTDS", "8473-VUVJN", "2862-PFNIK", "4367-NHWMM", "3797-VTIDR", "1496-GGSUK", "3551-HUAZH", "0616-ATFGB", "3439-GVUSX", "7242-QZLXF", "9248-OJYKK", "4415-IJZTP", "5351-QESIO", "0723-DRCLG", "6894-LFHLY", "3091-FYHKI", "1285-OKIPP", "3583-EKAPL", "9282-IZGQK", "1448-PWKYE", "8603-IJWDN", "0841-NULXI", "5673-FSSMF", "3049-NDXFL", "2018-QKYGT", "9822-OAOVB", "7854-FOKSF", "1740-CSDJP", "4074-SJFFA", "4727-MCYZG", "2004-OCQXK", "0495-RVCBF", "5501-TVMGM", "9124-LHCJQ", "7594-RQHXR", "6086-ESGRL", "5275-SQEIZ", "8945-GRKHX", "1069-XAIEM", "4614-NUVZD", "6629-CZTTH", "5393-RXQSZ", "3841-CONLJ", "3063-QFSZL", "2868-MZAGQ", "2867-UIMSS", "3751-KTZEL", "5909-ECHUI", "6457-USBER", "5919-TMRGD", "2232-DMLXU", "5192-EBGOV", "0970-ETWGE", "3027-ZTDHO", "7294-TMAOP", "7439-DKZTW", "5494-HECPR", "6260-ONULR", "6567-HOOPW", "8580-AECUZ", "0375-HVGXO", "3877-JRJIP", "9497-QCMMS", "9300-RENDD", "3988-RQIXO", "2514-GINMM", "3722-WPXTK", "4910-GMJOT", "2725-KXXWT", "3518-PZXZQ", "4826-XTSOH", "6857-VWJDT", "3801-HMYNL", "1761-AEZZR", "7120-RFMVS", "2386-LAHRK", "8149-RSOUN", "9885-CSMWE", "5178-LMXOP", "7274-RTAPZ", "5960-WPXQM", "6372-RFVNS", "2777-PHDEI", "5797-APWZC", "9019-QVLZD", "1455-ESIQH", "0318-QUUOB", "8740-CRYFY", "9300-AGZNL", "5378-IKEEG", "9725-SCPZG", "7577-SWIFR", "3776-EKTKM", "8058-INTPH", "8821-XNHVZ", "1941-HOSAM", "4273-MBHYA", "7503-ZGUZJ", "4912-PIGUY", "4929-BSTRX", "1415-YFWLT", "9507-EXLTT", "7568-PODML", "6521-YYTYI", "4351-QLCSU", "0674-EYYZV", "0295-PPHDO", "7590-VHVEG", "8665-UTDHZ", "6317-YPKDH", "9514-JDSKI", "6905-NIQIN", "5167-ZFFMM", "9399-APLBT", "2207-NHRJK", "4065-JJAVA", "5868-CZJDR", "7595-EUIVN", "1866-OBPNR", "5054-IEXZT", "0137-OCGAB", "1845-ZLLIG", "1406-PUQVY", "2254-DLXRI", "4317-VTEOA", "6689-KXGBO", "3178-FESZO", "2013-SGDXK", "4274-OWWYO", "3765-JXVKY", "9840-EFJQB", "6907-FLBER", "9752-ZNQUT", "5196-SGOAK", "4844-JJWUY", "1628-BIZYP", "8775-LHDJH", "3296-SILRA", "1977-STDKI", "7493-TPUWZ", "9894-EZEWG", "1471-GIQKQ", "6614-VBEGU", "0823-HSCDJ", "9505-SQFSW", "5073-WXOYN", "8807-ARQET", "4468-KAZHE", "2625-TRCZQ", "7721-JXEAW", "1636-NTNCO", "1104-FEJAM", "2636-OHFMN", "2141-RRYGO", "3665-JATSN", "7284-BUYEC", "2041-JIJCI", "9026-LHEVG", "3329-WDIOK", "2187-LZGPL", "6217-TOWGS", "1100-DDVRV", "3669-LVWZB", "7502-BNYGS", "0980-PVMRC", "2969-QWUBZ", "9693-XMUOB", "0212-ISBBF", "5438-QMDDL", "3999-WRNGR", "6778-YSNIH", "0319-QZTCO", "1697-BCSHV", "4628-CTTLA", "2436-QBZFP", "1862-SKORY", "9633-DENPU", "5424-RLQLC", "2931-FSOHN", "6218-KNUBD", "0786-VSSUD", "5948-UJZLF", "4827-USJHP", "8017-UVSZU", "1251-KRREG", "4130-MZLCC", "8229-MYEJZ", "6235-VDHOM", "6543-CPZMK", "1456-TWCGB", "9342-VNIMQ", "0811-GSDTP", "8919-FYFQZ", "3097-NNSPB", "3391-JSQEW", "8791-GFXLZ", "2446-ZKVAF", "8967-SZQAS", "6789-HJBWG", "9992-UJOEL", "6625-UTXEW", "5651-WYIPH", "2586-CWXVV", "5423-BHIXO", "8069-YQQAJ", "7776-QWNFX", "6637-KYRCV", "3723-BFBGR", "8901-HJXTF", "5156-UMKOW", "1247-QBVSH", "7389-KBFIT", "9163-GHAYE", "1322-AGOQM", "1432-FPAXX", "7636-OWBPG", "3082-VQXNH", "5402-HTOTQ", "2108-YKQTY", "0975-VOOVL", "8148-BPLZQ", "3209-ZPKFI", "7579-OOPEC", "8805-JNRAZ", "5816-SCGFC", "7421-ZLUPA", "5404-GGUKR", "3345-PBBFH", "1226-UDFZR", "9415-TPKRV", "7501-VTYLJ", "7740-KKCXF", "2606-RMDHZ", "4353-HYOJD", "1078-TDCRN", "8718-PTMEZ", "1114-CENIM", "3173-NVMPX", "6339-DKLMK", "3873-NFTGI", "3570-YUEKJ", "3538-WZPHD", "7054-ENNGU", "9881-VCZEP", "8654-DHAOW", "7872-RDDLZ", "6048-QBXKL", "3256-EZDBI", "8344-WFMFH", "1395-OFUWC", "1442-BQPVU", "1596-OQSPS", "2843-CQMEG", "6304-IJFSQ", "0094-OIFMO", "9947-OTFQU", "3488-PGMQJ", "7982-VCELR", "6862-CQUMB", "6599-CEBNN", "0111-KLBQG", "7916-VCCPB", "0578-SKVMF", "5949-XIKAE", "6986-IJDHX", "1216-JWVUX", "2189-WWOEW", "3138-BKYAV", "0947-MUGVO", "9944-HKVVB", "1907-UBQFC", "5146-CBVOE", "8584-KMVXD", "5651-YLPRD", "8242-SOQUO", "3733-LSYCE", "9793-WECQC", "5899-OUVKV", "2984-AFWNC", "2761-OCIAX", "8017-LXHFA", "5035-BVCXS", "6407-UTSLV", "5318-IXUZF", "8496-EJAUI", "4143-HHPMK", "0923-PNFUB", "3365-SAIGS", "5989-PGKJB", "8337-MSSXB", "2528-HFYZX", "2135-DQWAQ", "7548-SEPYI", "7503-QQRVF"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "CustomerChurn[gender]": {"label": ["Female", "Male"], "data": [258, 242]}, "CustomerChurn[SeniorCitizen]": {"label": ["1", "0"], "data": [102, 398]}, "CustomerChurn[Partner]": {"label": ["1", "0"], "data": [110, 390]}, "CustomerChurn[Dependents]": {"label": ["0", "1"], "data": [424, 76]}, "CustomerChurn[tenure]": {"label": ["1.0 - 7.6", "7.6 - 14.2", "14.2 - 20.8", "20.8 - 27.4", "27.4 - 34.0", "34.0 - 40.6", "40.6 - 47.2", "47.2 - 53.8", "53.8 - 60.4", "60.4 - 67"], "data": [396, 31, 22, 11, 8, 9, 9, 5, 8, 1]}, "CustomerChurn[PhoneService]": {"label": ["1", "0"], "data": [406, 94]}, "CustomerChurn[MultipleLines]": {"label": ["No", "No phone service", "Yes"], "data": [323, 94, 83]}, "CustomerChurn[InternetService]": {"label": ["Fiber optic", "DSL"], "data": [239, 261]}, "CustomerChurn[OnlineSecurity]": {"label": ["No"], "data": [500]}, "CustomerChurn[OnlineBackup]": {"label": ["No", "Yes"], "data": [313, 187]}, "CustomerChurn[DeviceProtection]": {"label": ["No"], "data": [500]}, "CustomerChurn[TechSupport]": {"label": ["No"], "data": [500]}, "CustomerChurn[StreamingTV]": {"label": ["No", "Yes"], "data": [389, 111]}, "CustomerChurn[StreamingMovies]": {"label": ["No", "Yes"], "data": [394, 106]}, "CustomerChurn[Contract]": {"label": ["Month-to-month"], "data": [500]}, "CustomerChurn[PaperlessBilling]": {"label": ["1", "0"], "data": [349, 151]}, "CustomerChurn[PaymentMethod]": {"label": ["Mailed check", "Electronic check", "Bank transfer (automatic)", "Credit card (automatic)"], "data": [131, 296, 35, 38]}, "CustomerChurn[MonthlyCharges]": {"label": ["23.0 - 30.7", "30.7 - 38.4", "38.4 - 46.1", "46.1 - 53.8", "53.8 - 61.5", "61.5 - 69.2", "69.2 - 76.9", "76.9 - 84.6", "84.6 - 92.3", "92.3 - 100.0"], "data": [55, 13, 80, 66, 39, 50, 97, 46, 35, 19]}, "CustomerChurn[TotalCharges]": {"label": ["23.0 - 454.5", "454.5 - 886.0", "886.0 - 1317.5", "1317.5 - 1749.0", "1749.0 - 2180.5", "2180.5 - 2612.0", "2612.0 - 3043.5", "3043.5 - 3475.0", "3475.0 - 3906.5", "3906.5 - 4338.0"], "data": [406, 27, 17, 19, 8, 8, 6, 4, 3, 2]}, "CustomerChurn[Churn]": {"label": ["1", "0"], "data": [312, 188]}, "CustomerChurn[customerID]_stringindexer_transform": {"label": ["0.0 - 49.9", "49.9 - 99.8", "99.8 - 149.7", "149.7 - 199.6", "199.6 - 249.5", "249.5 - 299.4", "299.4 - 349.3", "349.3 - 399.2", "399.2 - 449.1", "449.1 - 499.0"], "data": [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]}, "CustomerChurn[gender]_stringindexer_transform": {"label": ["0", "1"], "data": [258, 242]}, "CustomerChurn[MultipleLines]_stringindexer_transform": {"label": ["0", "1", "2"], "data": [323, 94, 83]}, "CustomerChurn[InternetService]_stringindexer_transform": {"label": ["1", "0"], "data": [239, 261]}, "CustomerChurn[OnlineSecurity]_stringindexer_transform": {"label": ["0"], "data": [500]}, "CustomerChurn[OnlineBackup]_stringindexer_transform": {"label": ["0", "1"], "data": [313, 187]}, "CustomerChurn[DeviceProtection]_stringindexer_transform": {"label": ["0"], "data": [500]}, "CustomerChurn[TechSupport]_stringindexer_transform": {"label": ["0"], "data": [500]}, "CustomerChurn[StreamingTV]_stringindexer_transform": {"label": ["0", "1"], "data": [389, 111]}, "CustomerChurn[StreamingMovies]_stringindexer_transform": {"label": ["0", "1"], "data": [394, 106]}, "CustomerChurn[Contract]_stringindexer_transform": {"label": ["0"], "data": [500]}, "CustomerChurn[PaymentMethod]_stringindexer_transform": {"label": ["1", "0", "3", "2"], "data": [131, 296, 35, 38]}}}, "ManualFE": {"FE": [{"transformationsData": [{"feature_label": "CustomerChurn[customerID]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[customerID]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "0021-IKXGC", "max": "9992-UJOEL", "missing": "0", "distinct": "500"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[customerID]"}, {"transformationsData": [{"feature_label": "CustomerChurn[gender]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[gender]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Female", "max": "Male", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[gender]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[SeniorCitizen]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.2", "stddev": "0.4", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[SeniorCitiz..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Partner]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Partner]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Dependents]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.15", "stddev": "0.36", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Dependents]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[tenure]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "6.53", "stddev": "12.57", "min": "1", "max": "67", "missing": "0"}, "updatedLabel": "CustomerChurn[tenure]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[PhoneService]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.81", "stddev": "0.39", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[PhoneServic..."}, {"transformationsData": [{"feature_label": "CustomerChurn[MultipleLines]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[MultipleLines]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "3"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[MultipleLin..."}, {"transformationsData": [{"feature_label": "CustomerChurn[InternetService]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[InternetService]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "DSL", "max": "Fiber optic", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[InternetSer..."}, {"transformationsData": [{"feature_label": "CustomerChurn[OnlineSecurity]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[OnlineSecurity]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[OnlineSecur..."}, {"transformationsData": [{"feature_label": "CustomerChurn[OnlineBackup]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[OnlineBackup]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[OnlineBacku..."}, {"transformationsData": [{"feature_label": "CustomerChurn[DeviceProtection]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[DeviceProtection]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[DeviceProte..."}, {"transformationsData": [{"feature_label": "CustomerChurn[TechSupport]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[TechSupport]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[TechSupport..."}, {"transformationsData": [{"feature_label": "CustomerChurn[StreamingTV]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[StreamingTV]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[StreamingTV..."}, {"transformationsData": [{"feature_label": "CustomerChurn[StreamingMovies]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[StreamingMovies]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[StreamingMo..."}, {"transformationsData": [{"feature_label": "CustomerChurn[Contract]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[Contract]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Month-to-month", "max": "Month-to-month", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[Contract]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[PaperlessBilling]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.7", "stddev": "0.46", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[PaperlessBi..."}, {"transformationsData": [{"feature_label": "CustomerChurn[PaymentMethod]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[PaymentMethod]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Bank transfer (automatic)", "max": "Mailed check", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[PaymentMeth..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[MonthlyCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "60.22", "stddev": "19.34", "min": "23.45", "max": "100.25", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[MonthlyChar..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[TotalCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "370.74", "stddev": "721.08", "min": "23.45", "max": "4338.6", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[TotalCharge..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Churn]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Churn]"}, {"feature": "CustomerChurn[customerID]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "real", "selected": true, "stats": {"count": "500", "mean": "249.5", "stddev": "144.48", "min": "0.0", "max": "499.0", "missing": "0"}, "updatedLabel": "CustomerChurn[customerID]..."}, {"feature": "CustomerChurn[gender]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.48", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[gender]_str..."}, {"feature": "CustomerChurn[MultipleLines]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.52", "stddev": "0.76", "min": "0", "max": "2", "missing": "0"}, "updatedLabel": "CustomerChurn[MultipleLin..."}, {"feature": "CustomerChurn[InternetService]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.48", "stddev": "0.5", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[InternetSer..."}, {"feature": "CustomerChurn[OnlineSecurity]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[OnlineSecur..."}, {"feature": "CustomerChurn[OnlineBackup]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.37", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[OnlineBacku..."}, {"feature": "CustomerChurn[DeviceProtection]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[DeviceProte..."}, {"feature": "CustomerChurn[TechSupport]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[TechSupport..."}, {"feature": "CustomerChurn[StreamingTV]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.42", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[StreamingTV..."}, {"feature": "CustomerChurn[StreamingMovies]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.21", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[StreamingMo..."}, {"feature": "CustomerChurn[Contract]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.0", "stddev": "0.0", "min": "0", "max": "0", "missing": "0"}, "updatedLabel": "CustomerChurn[Contract]_s..."}, {"feature": "CustomerChurn[PaymentMethod]_stringindexer_transform", "transformation": [{"transformation": "novalue", "selectedAsDefault": 0}], "transformationsData": [{"transformation_label": "novalue"}], "type": "numeric", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.9", "min": "0", "max": "3", "missing": "0"}, "updatedLabel": "CustomerChurn[PaymentMeth..."}], "message": "Successfully executed", "status": 1, "userid": "3728edb5-ec63-468b-9cf0-eca3719e7fe5", "autoFE_flag": true, "stageId": "649c00cae61a96675bcdf6dc", "FESamplePath": "/FileStore/platform/sampleData/649c00cae61a96675bcdf6dc_AutoFE/part-00000-0ee7abe7-2ac6-4a3d-8695-e90a551d21e5-c000.csv", "manualfesamplepath": "/FileStore/platform/sampleData/649c00cae61a96675bcdf6dc_AutoFE/part-00000-0ee7abe7-2ac6-4a3d-8695-e90a551d21e5-c000.csv", "samplecount": 500, "originalcount": 7043, "dataPercentage": "100", "FEGraph": [{"values": {"label": ["0390-DCFDQ", "5940-AHUHD", "5583-SXDAG", "4110-PFEUZ", "8040-MNRTF", "1820-TQVEV", "5875-YPQFJ", "7206-GZCDC", "8375-DKEBR", "9804-ICWBG", "8380-PEFPE", "3494-JCHRQ", "8000-REIQB", "8309-IEYJD", "3177-LASXD", "1084-UQCHV", "8051-HJRLT", "0151-ONTOV", "6140-QNRQQ", "1846-XWOQN", "9603-OAIHC", "5186-SAMNZ", "2262-SLNVK", "5539-TMZLF", "7409-KIUTL", "0679-IDSTG", "5542-TBBWB", "1086-LXKFY", "2636-ALXXZ", "1640-PLFMP", "9617-INGJY", "4510-HIMLV", "3878-AVSOQ", "3716-BDVDB", "9488-HGMJH", "0968-GSIKN", "4806-HIPDW", "8644-XLFBW", "0812-WUPTB", "3871-IKPYH", "2920-RNCEZ", "1915-IOFGU", "7665-TOALD", "6416-TVAIH", "3066-RRJIO", "0515-YPMCW", "4603-JANFB", "7908-QCBCA", "7465-ZZRVX", "4702-IOQDC", "3428-XZMAZ", "1853-UDXBW", "5032-MIYKT", "0511-JTEOY", "5134-IKDAY", "5884-GCYMI", "6653-CBBOM", "4759-TRPLW", "8062-YBDOE", "5376-DEQCP", "2506-TNFCO", "2619-WFQWU", "5550-VFRLC", "3244-DCJWY", "8042-JVNFH", "9985-MWVIX", "4871-JTKJF", "3422-LYEPQ", "1363-TXLSL", "4550-EVXNY", "0519-XUZJU", "9605-WGJVW", "7153-OANIO", "0328-GRPMV", "0488-GSLFR", "9728-FTTVZ", "7254-IQWOZ", "2856-HYAPG", "1031-IIDEO", "1062-LHZOD", "1447-GIQMR", "7660-HDPJV", "2446-PLQVO", "4501-EQDRN", "6457-GIRWB", "6502-MJQAE", "1122-JWTJW", "3413-BMNZE", "2135-RXIHG", "6582-OIVSP", "8705-WZCYL", "5522-JBWMO", "9244-ZVAPM", "0887-HJGAR", "6982-SSHFK", "9448-REEVD", "9117-SHLZX", "3165-HDOEW", "5552-ZNFSJ", "2833-SLKDQ", "4237-RLAQD", "1478-VPOAD", "6650-VJONK", "8080-DDEMJ", "8356-WUAOJ", "3669-OYSJI", "1612-EOHDH", "7054-LGEQW", "3961-SXAXY", "3566-HJGPK", "4193-ORFCL", "9828-AOQLM", "7065-YUNRY", "5858-EAFCZ", "1895-QTKDO", "4706-DGAHW", "5103-MHMHY", "4373-VVHQL", "1942-OQFRW", "0415-MOSGF", "4146-SVFUD", "5696-QURRL", "5692-FPTAH", "5133-POWUA", "5077-DXTCG", "7593-XFKDI", "7663-RGWBC", "8950-MTZNV", "8710-YGLWG", "6128-CZOMY", "6185-TASNN", "7825-GKXMW", "2903-YYTBW", "7359-PTSXY", "6959-UWKHF", "8720-RQSBJ", "7754-IXRMC", "2672-OJQZP", "6145-NNPNO", "6595-COKXZ", "8180-AKMJV", "4855-SNKMY", "7252-NTGSS", "2082-CEFLT", "6142-VSJQO", "2275-RBYQS", "1976-CFOCS", "4361-JEIVL", "9214-EKVXR", "0082-LDZUE", "4847-QNOKA", "1963-SVUCV", "6127-IYJOZ", "3085-QUOZK", "3926-CUQZX", "1024-GUALD", "4195-NZGTA", "6366-ZGQGL", "0021-IKXGC", "6158-HDPXZ", "1452-VOQCH", "8372-JUXUI", "3276-HDUEG", "9227-LUNBG", "6513-EECDB", "6358-LYNGM", "7537-RBWEA", "1768-ZAIFU", "3334-CTHOL", "6960-HVYXR", "7767-UXAGJ", "8445-DNBAE", "5240-IJOQT", "0661-XEYAN", "1157-BQCUW", "7442-YGZFK", "5834-ASPWA", "8775-ERLNB", "2538-OIMXF", "9787-XVQIU", "0248-IPDFW", "7180-PISOG", "2672-DZUOY", "2609-IAICY", "3707-GNWHM", "4749-VFKVB", "4102-OQUPX", "2740-TVLFN", "2209-XADXF", "6032-IGALN", "9907-SWKKF", "7365-BVCJH", "4988-IQIGL", "3746-EUBYR", "0612-RTZZA", "8816-VXNZD", "2103-ZRXFN", "9136-ALYBR", "8260-NGFNY", "1833-VGRUM", "1334-FJSVR", "0023-HGHWL", "4729-XKASR", "9058-CBREO", "9895-VFOXH", "2982-IHMFT", "7932-WPTDS", "8473-VUVJN", "2862-PFNIK", "4367-NHWMM", "3797-VTIDR", "1496-GGSUK", "3551-HUAZH", "0616-ATFGB", "3439-GVUSX", "7242-QZLXF", "9248-OJYKK", "4415-IJZTP", "5351-QESIO", "0723-DRCLG", "6894-LFHLY", "3091-FYHKI", "1285-OKIPP", "3583-EKAPL", "9282-IZGQK", "1448-PWKYE", "8603-IJWDN", "0841-NULXI", "5673-FSSMF", "3049-NDXFL", "2018-QKYGT", "9822-OAOVB", "7854-FOKSF", "1740-CSDJP", "4074-SJFFA", "4727-MCYZG", "2004-OCQXK", "0495-RVCBF", "5501-TVMGM", "9124-LHCJQ", "7594-RQHXR", "6086-ESGRL", "5275-SQEIZ", "8945-GRKHX", "1069-XAIEM", "4614-NUVZD", "6629-CZTTH", "5393-RXQSZ", "3841-CONLJ", "3063-QFSZL", "2868-MZAGQ", "2867-UIMSS", "3751-KTZEL", "5909-ECHUI", "6457-USBER", "5919-TMRGD", "2232-DMLXU", "5192-EBGOV", "0970-ETWGE", "3027-ZTDHO", "7294-TMAOP", "7439-DKZTW", "5494-HECPR", "6260-ONULR", "6567-HOOPW", "8580-AECUZ", "0375-HVGXO", "3877-JRJIP", "9497-QCMMS", "9300-RENDD", "3988-RQIXO", "2514-GINMM", "3722-WPXTK", "4910-GMJOT", "2725-KXXWT", "3518-PZXZQ", "4826-XTSOH", "6857-VWJDT", "3801-HMYNL", "1761-AEZZR", "7120-RFMVS", "2386-LAHRK", "8149-RSOUN", "9885-CSMWE", "5178-LMXOP", "7274-RTAPZ", "5960-WPXQM", "6372-RFVNS", "2777-PHDEI", "5797-APWZC", "9019-QVLZD", "1455-ESIQH", "0318-QUUOB", "8740-CRYFY", "9300-AGZNL", "5378-IKEEG", "9725-SCPZG", "7577-SWIFR", "3776-EKTKM", "8058-INTPH", "8821-XNHVZ", "1941-HOSAM", "4273-MBHYA", "7503-ZGUZJ", "4912-PIGUY", "4929-BSTRX", "1415-YFWLT", "9507-EXLTT", "7568-PODML", "6521-YYTYI", "4351-QLCSU", "0674-EYYZV", "0295-PPHDO", "7590-VHVEG", "8665-UTDHZ", "6317-YPKDH", "9514-JDSKI", "6905-NIQIN", "5167-ZFFMM", "9399-APLBT", "2207-NHRJK", "4065-JJAVA", "5868-CZJDR", "7595-EUIVN", "1866-OBPNR", "5054-IEXZT", "0137-OCGAB", "1845-ZLLIG", "1406-PUQVY", "2254-DLXRI", "4317-VTEOA", "6689-KXGBO", "3178-FESZO", "2013-SGDXK", "4274-OWWYO", "3765-JXVKY", "9840-EFJQB", "6907-FLBER", "9752-ZNQUT", "5196-SGOAK", "4844-JJWUY", "1628-BIZYP", "8775-LHDJH", "3296-SILRA", "1977-STDKI", "7493-TPUWZ", "9894-EZEWG", "1471-GIQKQ", "6614-VBEGU", "0823-HSCDJ", "9505-SQFSW", "5073-WXOYN", "8807-ARQET", "4468-KAZHE", "2625-TRCZQ", "7721-JXEAW", "1636-NTNCO", "1104-FEJAM", "2636-OHFMN", "2141-RRYGO", "3665-JATSN", "7284-BUYEC", "2041-JIJCI", "9026-LHEVG", "3329-WDIOK", "2187-LZGPL", "6217-TOWGS", "1100-DDVRV", "3669-LVWZB", "7502-BNYGS", "0980-PVMRC", "2969-QWUBZ", "9693-XMUOB", "0212-ISBBF", "5438-QMDDL", "3999-WRNGR", "6778-YSNIH", "0319-QZTCO", "1697-BCSHV", "4628-CTTLA", "2436-QBZFP", "1862-SKORY", "9633-DENPU", "5424-RLQLC", "2931-FSOHN", "6218-KNUBD", "0786-VSSUD", "5948-UJZLF", "4827-USJHP", "8017-UVSZU", "1251-KRREG", "4130-MZLCC", "8229-MYEJZ", "6235-VDHOM", "6543-CPZMK", "1456-TWCGB", "9342-VNIMQ", "0811-GSDTP", "8919-FYFQZ", "3097-NNSPB", "3391-JSQEW", "8791-GFXLZ", "2446-ZKVAF", "8967-SZQAS", "6789-HJBWG", "9992-UJOEL", "6625-UTXEW", "5651-WYIPH", "2586-CWXVV", "5423-BHIXO", "8069-YQQAJ", "7776-QWNFX", "6637-KYRCV", "3723-BFBGR", "8901-HJXTF", "5156-UMKOW", "1247-QBVSH", "7389-KBFIT", "9163-GHAYE", "1322-AGOQM", "1432-FPAXX", "7636-OWBPG", "3082-VQXNH", "5402-HTOTQ", "2108-YKQTY", "0975-VOOVL", "8148-BPLZQ", "3209-ZPKFI", "7579-OOPEC", "8805-JNRAZ", "5816-SCGFC", "7421-ZLUPA", "5404-GGUKR", "3345-PBBFH", "1226-UDFZR", "9415-TPKRV", "7501-VTYLJ", "7740-KKCXF", "2606-RMDHZ", "4353-HYOJD", "1078-TDCRN", "8718-PTMEZ", "1114-CENIM", "3173-NVMPX", "6339-DKLMK", "3873-NFTGI", "3570-YUEKJ", "3538-WZPHD", "7054-ENNGU", "9881-VCZEP", "8654-DHAOW", "7872-RDDLZ", "6048-QBXKL", "3256-EZDBI", "8344-WFMFH", "1395-OFUWC", "1442-BQPVU", "1596-OQSPS", "2843-CQMEG", "6304-IJFSQ", "0094-OIFMO", "9947-OTFQU", "3488-PGMQJ", "7982-VCELR", "6862-CQUMB", "6599-CEBNN", "0111-KLBQG", "7916-VCCPB", "0578-SKVMF", "5949-XIKAE", "6986-IJDHX", "1216-JWVUX", "2189-WWOEW", "3138-BKYAV", "0947-MUGVO", "9944-HKVVB", "1907-UBQFC", "5146-CBVOE", "8584-KMVXD", "5651-YLPRD", "8242-SOQUO", "3733-LSYCE", "9793-WECQC", "5899-OUVKV", "2984-AFWNC", "2761-OCIAX", "8017-LXHFA", "5035-BVCXS", "6407-UTSLV", "5318-IXUZF", "8496-EJAUI", "4143-HHPMK", "0923-PNFUB", "3365-SAIGS", "5989-PGKJB", "8337-MSSXB", "2528-HFYZX", "2135-DQWAQ", "7548-SEPYI", "7503-QQRVF"], "data": [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}, "label": "CustomerChurn[customerID]", "count": 500, "min": "0021-IKXGC", "max": "9992-UJOEL"}, {"values": {"label": ["Female", "Male"], "data": [258, 242]}, "label": "CustomerChurn[gender]", "count": 2, "min": "Female", "max": "Male"}, {"values": {"label": ["1", "0"], "data": [102, 398]}, "label": "CustomerChurn[SeniorCitizen]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1", "0"], "data": [110, 390]}, "label": "CustomerChurn[Partner]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [424, 76]}, "label": "CustomerChurn[Dependents]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["1.0 - 7.6", "7.6 - 14.2", "14.2 - 20.8", "20.8 - 27.4", "27.4 - 34.0", "34.0 - 40.6", "40.6 - 47.2", "47.2 - 53.8", "53.8 - 60.4", "60.4 - 67"], "data": [396, 31, 22, 11, 8, 9, 9, 5, 8, 1]}, "label": "CustomerChurn[tenure]", "count": 10, "min": 1.0, "max": 67}, {"values": {"label": ["1", "0"], "data": [406, 94]}, "label": "CustomerChurn[PhoneService]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["No", "No phone service", "Yes"], "data": [323, 94, 83]}, "label": "CustomerChurn[MultipleLines]", "count": 3, "min": "No", "max": "Yes"}, {"values": {"label": ["Fiber optic", "DSL"], "data": [239, 261]}, "label": "CustomerChurn[InternetService]", "count": 2, "min": "DSL", "max": "Fiber optic"}, {"values": {"label": ["No"], "data": [500]}, "label": "CustomerChurn[OnlineSecurity]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No", "Yes"], "data": [313, 187]}, "label": "CustomerChurn[OnlineBackup]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["No"], "data": [500]}, "label": "CustomerChurn[DeviceProtection]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No"], "data": [500]}, "label": "CustomerChurn[TechSupport]", "count": 1, "min": "No", "max": "No"}, {"values": {"label": ["No", "Yes"], "data": [389, 111]}, "label": "CustomerChurn[StreamingTV]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["No", "Yes"], "data": [394, 106]}, "label": "CustomerChurn[StreamingMovies]", "count": 2, "min": "No", "max": "Yes"}, {"values": {"label": ["Month-to-month"], "data": [500]}, "label": "CustomerChurn[Contract]", "count": 1, "min": "Month-to-month", "max": "Month-to-month"}, {"values": {"label": ["1", "0"], "data": [349, 151]}, "label": "CustomerChurn[PaperlessBilling]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["Mailed check", "Electronic check", "Bank transfer (automatic)", "Credit card (automatic)"], "data": [131, 296, 35, 38]}, "label": "CustomerChurn[PaymentMethod]", "count": 4, "min": "Bank transfer (automatic)", "max": "Mailed check"}, {"values": {"label": ["23.0 - 30.7", "30.7 - 38.4", "38.4 - 46.1", "46.1 - 53.8", "53.8 - 61.5", "61.5 - 69.2", "69.2 - 76.9", "76.9 - 84.6", "84.6 - 92.3", "92.3 - 100.0"], "data": [55, 13, 80, 66, 39, 50, 97, 46, 35, 19]}, "label": "CustomerChurn[MonthlyCharges]", "count": 10, "min": 23.0, "max": 100.0}, {"values": {"label": ["23.0 - 454.5", "454.5 - 886.0", "886.0 - 1317.5", "1317.5 - 1749.0", "1749.0 - 2180.5", "2180.5 - 2612.0", "2612.0 - 3043.5", "3043.5 - 3475.0", "3475.0 - 3906.5", "3906.5 - 4338.0"], "data": [406, 27, 17, 19, 8, 8, 6, 4, 3, 2]}, "label": "CustomerChurn[TotalCharges]", "count": 10, "min": 23.0, "max": 4338.0}, {"values": {"label": ["1", "0"], "data": [312, 188]}, "label": "CustomerChurn[Churn]", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0.0 - 49.9", "49.9 - 99.8", "99.8 - 149.7", "149.7 - 199.6", "199.6 - 249.5", "249.5 - 299.4", "299.4 - 349.3", "349.3 - 399.2", "399.2 - 449.1", "449.1 - 499.0"], "data": [50, 50, 50, 50, 50, 50, 50, 50, 50, 50]}, "label": "CustomerChurn[customerID]_stringindexer_transform", "count": 10, "min": 0.0, "max": 499.0}, {"values": {"label": ["0", "1"], "data": [258, 242]}, "label": "CustomerChurn[gender]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1", "2"], "data": [323, 94, 83]}, "label": "CustomerChurn[MultipleLines]_stringindexer_transform", "count": 3, "min": "0", "max": "2"}, {"values": {"label": ["1", "0"], "data": [239, 261]}, "label": "CustomerChurn[InternetService]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[OnlineSecurity]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [313, 187]}, "label": "CustomerChurn[OnlineBackup]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[DeviceProtection]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[TechSupport]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["0", "1"], "data": [389, 111]}, "label": "CustomerChurn[StreamingTV]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0", "1"], "data": [394, 106]}, "label": "CustomerChurn[StreamingMovies]_stringindexer_transform", "count": 2, "min": "0", "max": "1"}, {"values": {"label": ["0"], "data": [500]}, "label": "CustomerChurn[Contract]_stringindexer_transform", "count": 1, "min": "0", "max": "0"}, {"values": {"label": ["1", "0", "3", "2"], "data": [131, 296, 35, 38]}, "label": "CustomerChurn[PaymentMethod]_stringindexer_transform", "count": 4, "min": "0", "max": "3"}]}, "selectedFE": [{"transformationsData": [{"feature_label": "CustomerChurn[customerID]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[customerID]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "0021-IKXGC", "max": "9992-UJOEL", "missing": "0", "distinct": "500"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[customerID]"}, {"transformationsData": [{"feature_label": "CustomerChurn[gender]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[gender]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Female", "max": "Male", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[gender]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[SeniorCitizen]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.2", "stddev": "0.4", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[SeniorCitiz..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Partner]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.22", "stddev": "0.41", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Partner]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Dependents]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.15", "stddev": "0.36", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Dependents]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[tenure]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "6.53", "stddev": "12.57", "min": "1", "max": "67", "missing": "0"}, "updatedLabel": "CustomerChurn[tenure]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[PhoneService]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.81", "stddev": "0.39", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[PhoneServic..."}, {"transformationsData": [{"feature_label": "CustomerChurn[MultipleLines]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[MultipleLines]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "3"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[MultipleLin..."}, {"transformationsData": [{"feature_label": "CustomerChurn[InternetService]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[InternetService]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "DSL", "max": "Fiber optic", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[InternetSer..."}, {"transformationsData": [{"feature_label": "CustomerChurn[OnlineSecurity]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[OnlineSecurity]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[OnlineSecur..."}, {"transformationsData": [{"feature_label": "CustomerChurn[OnlineBackup]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[OnlineBackup]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[OnlineBacku..."}, {"transformationsData": [{"feature_label": "CustomerChurn[DeviceProtection]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[DeviceProtection]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[DeviceProte..."}, {"transformationsData": [{"feature_label": "CustomerChurn[TechSupport]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[TechSupport]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "No", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[TechSupport..."}, {"transformationsData": [{"feature_label": "CustomerChurn[StreamingTV]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[StreamingTV]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[StreamingTV..."}, {"transformationsData": [{"feature_label": "CustomerChurn[StreamingMovies]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[StreamingMovies]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "No", "max": "Yes", "missing": "0", "distinct": "2"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[StreamingMo..."}, {"transformationsData": [{"feature_label": "CustomerChurn[Contract]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[Contract]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Month-to-month", "max": "Month-to-month", "missing": "0", "distinct": "1"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[Contract]"}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[PaperlessBilling]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.7", "stddev": "0.46", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[PaperlessBi..."}, {"transformationsData": [{"feature_label": "CustomerChurn[PaymentMethod]", "transformation_label": "String Indexer"}], "feature": "CustomerChurn[PaymentMethod]", "type": "string", "selected": true, "replaceby": "max", "stats": {"count": "500", "mean": "", "stddev": "", "min": "Bank transfer (automatic)", "max": "Mailed check", "missing": "0", "distinct": "4"}, "transformation": [{"transformation": "String Indexer", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[PaymentMeth..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[MonthlyCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "60.22", "stddev": "19.34", "min": "23.45", "max": "100.25", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[MonthlyChar..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[TotalCharges]", "type": "real", "selected": true, "replaceby": "mean", "stats": {"count": "500", "mean": "370.74", "stddev": "721.08", "min": "23.45", "max": "4338.6", "missing": "0"}, "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "updatedLabel": "CustomerChurn[TotalCharge..."}, {"transformationsData": [{"transformation_label": "novalue"}], "feature": "CustomerChurn[Churn]", "transformation": [{"transformation": "novalue", "selectedAsDefault": 1}], "type": "numeric", "replaceby": "mean", "selected": true, "stats": {"count": "500", "mean": "0.62", "stddev": "0.48", "min": "0", "max": "1", "missing": "0"}, "updatedLabel": "CustomerChurn[Churn]"}], "autoFE_flag": true, "modeltrainingpercent": "100"}, "status": "new", "position": {"x": 62, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/transformation/feature-transformation.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "transformation", "text": "Auto FE", "slug": "auto-fe", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"AutoFE": {"autoFE_flag": true, "dataPercentage": "10"}, "ManualFE": {"FE": []}, "selectedFE": [], "autoFE_flag": true}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "3728edb5-ec63-468b-9cf0-eca3719e7fe5", "original_schema": [{"inherited": true, "checked": true, "field": "CustomerChurn[SeniorCitizen]", "alias": "CustomerChurn[SeniorCitizen]", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "CustomerChurn[Partner]", "alias": "CustomerChurn[Partner]", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "CustomerChurn[Dependents]", "alias": "CustomerChurn[Dependents]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "CustomerChurn[tenure]", "alias": "CustomerChurn[tenure]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "CustomerChurn[PhoneService]", "alias": "CustomerChurn[PhoneService]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaperlessBilling]", "alias": "CustomerChurn[PaperlessBilling]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "CustomerChurn[MonthlyCharges]", "alias": "CustomerChurn[MonthlyCharges]", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "CustomerChurn[TotalCharges]", "alias": "CustomerChurn[TotalCharges]", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "CustomerChurn[Churn]", "alias": "CustomerChurn[Churn]", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "CustomerChurn[customerID]_stringindexer", "alias": "CustomerChurn[customerID]_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "CustomerChurn[gender]_stringindexer", "alias": "CustomerChurn[gender]_stringindexer", "type": "numeric", "position": 10}, {"inherited": true, "checked": true, "field": "CustomerChurn[MultipleLines]_stringindexer", "alias": "CustomerChurn[MultipleLines]_stringindexer", "type": "numeric", "position": 11}, {"inherited": true, "checked": true, "field": "CustomerChurn[InternetService]_stringindexer", "alias": "CustomerChurn[InternetService]_stringindexer", "type": "numeric", "position": 12}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineSecurity]_stringindexer", "alias": "CustomerChurn[OnlineSecurity]_stringindexer", "type": "numeric", "position": 13}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineBackup]_stringindexer", "alias": "CustomerChurn[OnlineBackup]_stringindexer", "type": "numeric", "position": 14}, {"inherited": true, "checked": true, "field": "CustomerChurn[DeviceProtection]_stringindexer", "alias": "CustomerChurn[DeviceProtection]_stringindexer", "type": "numeric", "position": 15}, {"inherited": true, "checked": true, "field": "CustomerChurn[TechSupport]_stringindexer", "alias": "CustomerChurn[TechSupport]_stringindexer", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingTV]_stringindexer", "alias": "CustomerChurn[StreamingTV]_stringindexer", "type": "numeric", "position": 17}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingMovies]_stringindexer", "alias": "CustomerChurn[StreamingMovies]_stringindexer", "type": "numeric", "position": 18}, {"inherited": true, "checked": true, "field": "CustomerChurn[Contract]_stringindexer", "alias": "CustomerChurn[Contract]_stringindexer", "type": "numeric", "position": 19}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaymentMethod]_stringindexer", "alias": "CustomerChurn[PaymentMethod]_stringindexer", "type": "numeric", "position": 20}], "actual_schema": [{"inherited": true, "checked": true, "field": "CustomerChurn[customerID]", "alias": "CustomerChurn[customerID]", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "CustomerChurn[gender]", "alias": "CustomerChurn[gender]", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "CustomerChurn[SeniorCitizen]", "alias": "CustomerChurn[SeniorCitizen]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "CustomerChurn[Partner]", "alias": "CustomerChurn[Partner]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "CustomerChurn[Dependents]", "alias": "CustomerChurn[Dependents]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "CustomerChurn[tenure]", "alias": "CustomerChurn[tenure]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "CustomerChurn[PhoneService]", "alias": "CustomerChurn[PhoneService]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "CustomerChurn[MultipleLines]", "alias": "CustomerChurn[MultipleLines]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "CustomerChurn[InternetService]", "alias": "CustomerChurn[InternetService]", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineSecurity]", "alias": "CustomerChurn[OnlineSecurity]", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineBackup]", "alias": "CustomerChurn[OnlineBackup]", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "CustomerChurn[DeviceProtection]", "alias": "CustomerChurn[DeviceProtection]", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "CustomerChurn[TechSupport]", "alias": "CustomerChurn[TechSupport]", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingTV]", "alias": "CustomerChurn[StreamingTV]", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingMovies]", "alias": "CustomerChurn[StreamingMovies]", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "CustomerChurn[Contract]", "alias": "CustomerChurn[Contract]", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaperlessBilling]", "alias": "CustomerChurn[PaperlessBilling]", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaymentMethod]", "alias": "CustomerChurn[PaymentMethod]", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "CustomerChurn[MonthlyCharges]", "alias": "CustomerChurn[MonthlyCharges]", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "CustomerChurn[TotalCharges]", "alias": "CustomerChurn[TotalCharges]", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "CustomerChurn[Churn]", "alias": "CustomerChurn[Churn]", "type": "numeric", "position": 20}], "selected_schema": [], "created_at": "2023-06-28 09:43:38.333000", "originalcount": 7043, "samplecount": 701, "samplefile": "/FileStore/platform/sampleData/649c00cae61a96675bcdf6db/part-00000-07d57ccd-efa2-48cc-b41b-5c4c427080d9-c000.csv", "joinSchema": [], "updated_at": "2023-06-28 09:43:38.368000", "__v": 0, "datacache": 0, "sampleData": [{"CustomerChurn[customerID]": "8000-REIQB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.95, "CustomerChurn[TotalCharges]": 69.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0151-ONTOV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.9, "CustomerChurn[TotalCharges]": 70.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5542-TBBWB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.9, "CustomerChurn[TotalCharges]": 69.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7665-TOALD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.6, "CustomerChurn[TotalCharges]": 69.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0515-YPMCW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 70.45, "CustomerChurn[TotalCharges]": 70.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6653-CBBOM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.3, "CustomerChurn[TotalCharges]": 70.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3244-DCJWY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.25, "CustomerChurn[TotalCharges]": 70.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1447-GIQMR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.15, "CustomerChurn[TotalCharges]": 69.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2446-PLQVO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.3, "CustomerChurn[TotalCharges]": 70.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6185-TASNN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 46.3, "CustomerChurn[TotalCharges]": 46.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7825-GKXMW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.8, "CustomerChurn[TotalCharges]": 45.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7359-PTSXY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.75, "CustomerChurn[TotalCharges]": 45.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8180-AKMJV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 44.55, "CustomerChurn[TotalCharges]": 44.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2275-RBYQS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.4, "CustomerChurn[TotalCharges]": 45.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1963-SVUCV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.3, "CustomerChurn[TotalCharges]": 45.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0661-XEYAN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.8, "CustomerChurn[TotalCharges]": 25.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0248-IPDFW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.1, "CustomerChurn[TotalCharges]": 50.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9907-SWKKF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.05, "CustomerChurn[TotalCharges]": 25.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2103-ZRXFN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.75, "CustomerChurn[TotalCharges]": 50.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1334-FJSVR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.25, "CustomerChurn[TotalCharges]": 24.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0616-ATFGB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.05, "CustomerChurn[TotalCharges]": 25.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3091-FYHKI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.45, "CustomerChurn[TotalCharges]": 35.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0495-RVCBF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.7, "CustomerChurn[TotalCharges]": 79.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6086-ESGRL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 80.15, "CustomerChurn[TotalCharges]": 80.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5275-SQEIZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 80.85, "CustomerChurn[TotalCharges]": 80.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6629-CZTTH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.7, "CustomerChurn[TotalCharges]": 55.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2868-MZAGQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.25, "CustomerChurn[TotalCharges]": 79.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2867-UIMSS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.5, "CustomerChurn[TotalCharges]": 80.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2232-DMLXU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.2, "CustomerChurn[TotalCharges]": 55.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2514-GINMM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.5, "CustomerChurn[TotalCharges]": 79.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5054-IEXZT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.35, "CustomerChurn[TotalCharges]": 75.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1845-ZLLIG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.15, "CustomerChurn[TotalCharges]": 50.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1406-PUQVY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.9, "CustomerChurn[TotalCharges]": 49.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2254-DLXRI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.15, "CustomerChurn[TotalCharges]": 79.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6907-FLBER", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.3, "CustomerChurn[TotalCharges]": 54.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5073-WXOYN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.8, "CustomerChurn[TotalCharges]": 3027.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8807-ARQET", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 41, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 40.35, "CustomerChurn[TotalCharges]": 1677.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2625-TRCZQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.65, "CustomerChurn[TotalCharges]": 2553.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3329-WDIOK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.6, "CustomerChurn[TotalCharges]": 155.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2187-LZGPL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 40.1, "CustomerChurn[TotalCharges]": 293.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1251-KRREG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 54.4, "CustomerChurn[TotalCharges]": 114.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8967-SZQAS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 50.45, "CustomerChurn[TotalCharges]": 765.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8069-YQQAJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 31.1, "CustomerChurn[TotalCharges]": 419.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3723-BFBGR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 54.8, "CustomerChurn[TotalCharges]": 1291.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7389-KBFIT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 30.25, "CustomerChurn[TotalCharges]": 63.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3345-PBBFH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.55, "CustomerChurn[TotalCharges]": 393.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2606-RMDHZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 30.5, "CustomerChurn[TotalCharges]": 208.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3173-NVMPX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.3, "CustomerChurn[TotalCharges]": 501.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7054-ENNGU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.85, "CustomerChurn[TotalCharges]": 466.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9881-VCZEP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.1, "CustomerChurn[TotalCharges]": 1373.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8654-DHAOW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 54.15, "CustomerChurn[TotalCharges]": 101.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1442-BQPVU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 29.15, "CustomerChurn[TotalCharges]": 357.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6304-IJFSQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.9, "CustomerChurn[TotalCharges]": 130.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9947-OTFQU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.4, "CustomerChurn[TotalCharges]": 1074.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9944-HKVVB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.1, "CustomerChurn[TotalCharges]": 307.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5146-CBVOE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.1, "CustomerChurn[TotalCharges]": 1212.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3733-LSYCE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.35, "CustomerChurn[TotalCharges]": 1114.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5899-OUVKV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.5, "CustomerChurn[TotalCharges]": 2979.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4143-HHPMK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.35, "CustomerChurn[TotalCharges]": 4338.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2135-DQWAQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 85.3, "CustomerChurn[TotalCharges]": 420.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7517-LDMPS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.6, "CustomerChurn[TotalCharges]": 1017.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8393-DLHGA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.9, "CustomerChurn[TotalCharges]": 2448.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4536-PLEQY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 85.05, "CustomerChurn[TotalCharges]": 999.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0621-HJWXJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 81.55, "CustomerChurn[TotalCharges]": 5029.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4462-CYWMH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 89.8, "CustomerChurn[TotalCharges]": 5629.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2869-ADAWR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 45, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 89.3, "CustomerChurn[TotalCharges]": 4016.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8444-WRIDW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 80.45, "CustomerChurn[TotalCharges]": 5224.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6467-CHFZW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.35, "CustomerChurn[TotalCharges]": 4749.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1254-IZEYF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.95, "CustomerChurn[TotalCharges]": 3186.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8384-FZBJK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.6, "CustomerChurn[TotalCharges]": 5611.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0924-BJCRC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.45, "CustomerChurn[TotalCharges]": 5294.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1891-FZYSA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.95, "CustomerChurn[TotalCharges]": 6143.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9281-OFDMF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.7, "CustomerChurn[TotalCharges]": 3413.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6088-BXMRG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 32, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.85, "CustomerChurn[TotalCharges]": 3089.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9773-PEQBZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.85, "CustomerChurn[TotalCharges]": 797.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2208-UGTGR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.6, "CustomerChurn[TotalCharges]": 5581.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7278-CKDNC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 80.5, "CustomerChurn[TotalCharges]": 2088.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6987-XQSJT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.5, "CustomerChurn[TotalCharges]": 4370.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3462-BJQQA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.75, "CustomerChurn[TotalCharges]": 552.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9600-NAXZN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.4, "CustomerChurn[TotalCharges]": 4528.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3050-GBUSH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 34.8, "CustomerChurn[TotalCharges]": 113.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2373-NTKOD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 66.25, "CustomerChurn[TotalCharges]": 546.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0749-IRGQE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.3, "CustomerChurn[TotalCharges]": 528.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6240-EURKS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.0, "CustomerChurn[TotalCharges]": 553.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5515-RUGKN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 54.75, "CustomerChurn[TotalCharges]": 438.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8066-POXGX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.1, "CustomerChurn[TotalCharges]": 446.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4662-EKDPQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 62.05, "CustomerChurn[TotalCharges]": 118.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0463-ZSDNT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 56.75, "CustomerChurn[TotalCharges]": 503.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6180-YBIQI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.3, "CustomerChurn[TotalCharges]": 100.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0224-HJAPT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 47.15, "CustomerChurn[TotalCharges]": 223.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3126-WQMGH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 52.15, "CustomerChurn[TotalCharges]": 2583.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4236-UJPWO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.5, "CustomerChurn[TotalCharges]": 46.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1329-VHWNP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.05, "CustomerChurn[TotalCharges]": 189.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0440-QEXBZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.15, "CustomerChurn[TotalCharges]": 2139.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6542-LWGXJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.0, "CustomerChurn[TotalCharges]": 78.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9638-JIQYA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.9, "CustomerChurn[TotalCharges]": 49.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5480-HPRRX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 25.3, "CustomerChurn[TotalCharges]": 77.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4690-LLKUA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.05, "CustomerChurn[TotalCharges]": 770.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3258-SANFR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 44.7, "CustomerChurn[TotalCharges]": 276.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0322-CHQRU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.35, "CustomerChurn[TotalCharges]": 89.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4671-LXRDQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.0, "CustomerChurn[TotalCharges]": 96.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0621-TWIEM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.55, "CustomerChurn[TotalCharges]": 402.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7878-JGDKK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.55, "CustomerChurn[TotalCharges]": 220.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2831-EBWRN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.9, "CustomerChurn[TotalCharges]": 199.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7587-RZNME", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 43.3, "CustomerChurn[TotalCharges]": 123.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2219-MVUSO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.15, "CustomerChurn[TotalCharges]": 438.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1501-SGHBW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.85, "CustomerChurn[TotalCharges]": 81.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7396-VJUZB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 45.25, "CustomerChurn[TotalCharges]": 155.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3255-GRXMG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 45.65, "CustomerChurn[TotalCharges]": 747.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6143-JQKEA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 45.8, "CustomerChurn[TotalCharges]": 436.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7109-MFBYV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.45, "CustomerChurn[TotalCharges]": 1233.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2842-JTCCU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 46.05, "CustomerChurn[TotalCharges]": 80.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3640-JQGJG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 44.8, "CustomerChurn[TotalCharges]": 559.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0913-XWSCN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.5, "CustomerChurn[TotalCharges]": 4713.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5357-TZHPP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 84.4, "CustomerChurn[TotalCharges]": 732.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5373-SFODM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 85.25, "CustomerChurn[TotalCharges]": 3132.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9600-UDOPK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 94.05, "CustomerChurn[TotalCharges]": 2866.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9025-AOMKI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 93.55, "CustomerChurn[TotalCharges]": 536.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0432-CAJZV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 90.7, "CustomerChurn[TotalCharges]": 237.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3006-XIMLN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 94.2, "CustomerChurn[TotalCharges]": 193.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6729-GDNGC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 80.7, "CustomerChurn[TotalCharges]": 1614.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6825-UYPFK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.6, "CustomerChurn[TotalCharges]": 1758.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8329-GWVPJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.75, "CustomerChurn[TotalCharges]": 3557.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1047-NNCBF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 70.55, "CustomerChurn[TotalCharges]": 1493.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4450-MDZFX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 74.35, "CustomerChurn[TotalCharges]": 4453.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3074-GQWYX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.9, "CustomerChurn[TotalCharges]": 357.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1596-BBVTG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 75.35, "CustomerChurn[TotalCharges]": 2636.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7128-GGCNO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 72.8, "CustomerChurn[TotalCharges]": 3249.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5600-KTXFM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 69.95, "CustomerChurn[TotalCharges]": 143.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8224-DWCKX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.3, "CustomerChurn[TotalCharges]": 828.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8993-IZEUX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.15, "CustomerChurn[TotalCharges]": 488.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7912-SYRQT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.1, "CustomerChurn[TotalCharges]": 552.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5419-JKZNQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 77.9, "CustomerChurn[TotalCharges]": 2351.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8873-GLDMH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 73.85, "CustomerChurn[TotalCharges]": 401.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6311-UEUME", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.9, "CustomerChurn[TotalCharges]": 2384.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3318-NMQXL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 92.0, "CustomerChurn[TotalCharges]": 266.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6986-IXNDM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 92.9, "CustomerChurn[TotalCharges]": 1337.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6437-UKHMV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.7, "CustomerChurn[TotalCharges]": 586.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8752-STIVR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.0, "CustomerChurn[TotalCharges]": 303.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8875-AKBYH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.35, "CustomerChurn[TotalCharges]": 1745.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2215-ZAFGX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.5, "CustomerChurn[TotalCharges]": 791.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5364-XYIRR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.65, "CustomerChurn[TotalCharges]": 4812.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0916-QOFDP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.8, "CustomerChurn[TotalCharges]": 1346.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7402-EYFXX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.6, "CustomerChurn[TotalCharges]": 2404.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0195-IESCP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.25, "CustomerChurn[TotalCharges]": 855.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6474-FVJLC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.0, "CustomerChurn[TotalCharges]": 165.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0524-IAVZO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 2624.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7779-LGOVN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.65, "CustomerChurn[TotalCharges]": 856.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5229-PRWKT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 86.55, "CustomerChurn[TotalCharges]": 649.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5383-MMTWC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.0, "CustomerChurn[TotalCharges]": 613.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1226-IENZN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 78.75, "CustomerChurn[TotalCharges]": 1218.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4846-WHAFZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.5, "CustomerChurn[TotalCharges]": 2868.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0122-OAHPZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.85, "CustomerChurn[TotalCharges]": 511.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5879-SESNB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.25, "CustomerChurn[TotalCharges]": 888.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7341-LXCAF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.65, "CustomerChurn[TotalCharges]": 301.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0722-TROQR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.9, "CustomerChurn[TotalCharges]": 321.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3370-HXOPH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.1, "CustomerChurn[TotalCharges]": 257.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9274-CNFMO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.95, "CustomerChurn[TotalCharges]": 308.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9824-BEMCV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.0, "CustomerChurn[TotalCharges]": 1149.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9722-UJOJR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.75, "CustomerChurn[TotalCharges]": 1974.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0508-OOLTO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.65, "CustomerChurn[TotalCharges]": 135.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4482-EWFMI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.7, "CustomerChurn[TotalCharges]": 135.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2799-ARNLO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.35, "CustomerChurn[TotalCharges]": 341.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6705-LXORM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.05, "CustomerChurn[TotalCharges]": 302.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4291-SHSBH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.55, "CustomerChurn[TotalCharges]": 521.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0330-IVZHA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.95, "CustomerChurn[TotalCharges]": 330.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6557-BZXLQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.65, "CustomerChurn[TotalCharges]": 1043.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3999-QGRJH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.7, "CustomerChurn[TotalCharges]": 560.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7044-YAACC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.2, "CustomerChurn[TotalCharges]": 280.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7394-LWLYN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.15, "CustomerChurn[TotalCharges]": 123.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8630-FJLIB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.8, "CustomerChurn[TotalCharges]": 1221.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3721-CNEYS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 70.95, "CustomerChurn[TotalCharges]": 137.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3627-FCRDW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 71.0, "CustomerChurn[TotalCharges]": 672.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3014-WJKSM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 75.3, "CustomerChurn[TotalCharges]": 2263.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8357-EQXFO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.35, "CustomerChurn[TotalCharges]": 660.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5043-TRZWM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.55, "CustomerChurn[TotalCharges]": 75.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0004-TLHLJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.9, "CustomerChurn[TotalCharges]": 280.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7658-UYUQS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 86.55, "CustomerChurn[TotalCharges]": 1857.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9223-UCPVT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.4, "CustomerChurn[TotalCharges]": 94.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6339-YPSAH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 73.8, "CustomerChurn[TotalCharges]": 704.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6230-BSUXY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.0, "CustomerChurn[TotalCharges]": 85.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4767-HZZHQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 82.05, "CustomerChurn[TotalCharges]": 2570.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5419-KLXBN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 89.15, "CustomerChurn[TotalCharges]": 2257.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2603-HVKCG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.4, "CustomerChurn[TotalCharges]": 3143.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7682-AZNDK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.85, "CustomerChurn[TotalCharges]": 3091.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9688-YGXVR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 88.15, "CustomerChurn[TotalCharges]": 3973.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0302-JOIVN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.15, "CustomerChurn[TotalCharges]": 842.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0727-IWKVK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.9, "CustomerChurn[TotalCharges]": 741.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0219-YTZUE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 84.8, "CustomerChurn[TotalCharges]": 371.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0533-BNWKF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.45, "CustomerChurn[TotalCharges]": 4874.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8981-FJGLA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 78.0, "CustomerChurn[TotalCharges]": 851.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2070-XYMFH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.35, "CustomerChurn[TotalCharges]": 1835.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7449-HVPIV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.4, "CustomerChurn[TotalCharges]": 5099.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1170-SASML", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 85.4, "CustomerChurn[TotalCharges]": 5869.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7483-IQWIB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 92.95, "CustomerChurn[TotalCharges]": 3415.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4559-UWIHT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 82.65, "CustomerChurn[TotalCharges]": 1185.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8914-RBTSB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.8, "CustomerChurn[TotalCharges]": 3019.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6137-NICCO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 94.05, "CustomerChurn[TotalCharges]": 518.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5520-FVEWJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.5, "CustomerChurn[TotalCharges]": 916.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7703-ZEKEF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 81.0, "CustomerChurn[TotalCharges]": 1917.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3161-GETRM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.05, "CustomerChurn[TotalCharges]": 3097.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4566-NECEV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.55, "CustomerChurn[TotalCharges]": 500.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0979-PHULV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 99.45, "CustomerChurn[TotalCharges]": 7007.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3804-RVTGV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 103.85, "CustomerChurn[TotalCharges]": 5017.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3761-FLYZI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 108.8, "CustomerChurn[TotalCharges]": 7082.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8378-LKJAF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 101.15, "CustomerChurn[TotalCharges]": 3956.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1587-FKLZB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 99.5, "CustomerChurn[TotalCharges]": 6822.15, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8059-UDZFY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 105.35, "CustomerChurn[TotalCharges]": 3465.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9547-ITEFG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 102.6, "CustomerChurn[TotalCharges]": 897.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1751-NCDLI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.85, "CustomerChurn[TotalCharges]": 4564.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4433-JCGCG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.0, "CustomerChurn[TotalCharges]": 4680.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4553-DVPZG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.35, "CustomerChurn[TotalCharges]": 6164.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8818-DOPVL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 104.45, "CustomerChurn[TotalCharges]": 4863.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4735-ASGMA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 98.35, "CustomerChurn[TotalCharges]": 2515.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4078-SAYYN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.75, "CustomerChurn[TotalCharges]": 1129.75, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7159-FVYPK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.15, "CustomerChurn[TotalCharges]": 235.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7950-XWOVN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 34.7, "CustomerChurn[TotalCharges]": 383.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9013-AQORL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 48, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 45.55, "CustomerChurn[TotalCharges]": 2108.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2985-JUUBZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.55, "CustomerChurn[TotalCharges]": 3015.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4349-GFQHK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 54.35, "CustomerChurn[TotalCharges]": 54.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7470-MCQTK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 48.75, "CustomerChurn[TotalCharges]": 633.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7743-EXURX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.05, "CustomerChurn[TotalCharges]": 415.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8495-PRWFH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 42, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.65, "CustomerChurn[TotalCharges]": 2421.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7895-VONWT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 48.25, "CustomerChurn[TotalCharges]": 1293.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0486-HECZI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.75, "CustomerChurn[TotalCharges]": 5238.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6891-JPYFF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 48, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 105.25, "CustomerChurn[TotalCharges]": 4997.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8510-AWCXC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.8, "CustomerChurn[TotalCharges]": 1308.1, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0058-EVZWM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 89.8, "CustomerChurn[TotalCharges]": 4959.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5590-BYNII", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.75, "CustomerChurn[TotalCharges]": 2095.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0684-AOSIH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.0, "CustomerChurn[TotalCharges]": 95.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9699-UBQFS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.5, "CustomerChurn[TotalCharges]": 4156.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3588-WSTTJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.05, "CustomerChurn[TotalCharges]": 3554.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3701-SFMUH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.7, "CustomerChurn[TotalCharges]": 516.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2959-EEXWB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 45, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 50.9, "CustomerChurn[TotalCharges]": 2333.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7088-FBAWU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 74.55, "CustomerChurn[TotalCharges]": 1215.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9074-KGVOX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 39.45, "CustomerChurn[TotalCharges]": 2021.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0872-JCPIB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 65.75, "CustomerChurn[TotalCharges]": 1111.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7459-RRWQZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 64.65, "CustomerChurn[TotalCharges]": 994.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8100-HZZLJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 63.95, "CustomerChurn[TotalCharges]": 2737.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4659-NZRUF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 19, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.15, "CustomerChurn[TotalCharges]": 1789.25, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6741-EGCBI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 90.5, "CustomerChurn[TotalCharges]": 2595.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5708-EVONK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 93.4, "CustomerChurn[TotalCharges]": 5435.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5353-WILCI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 56.05, "CustomerChurn[TotalCharges]": 1522.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5206-HPJKM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.5, "CustomerChurn[TotalCharges]": 934.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7957-RYHQD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.2, "CustomerChurn[TotalCharges]": 3233.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8128-YVJRG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 79.65, "CustomerChurn[TotalCharges]": 604.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6772-KSATR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 81.7, "CustomerChurn[TotalCharges]": 81.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9626-WEQRM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.15, "CustomerChurn[TotalCharges]": 110.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0032-PGELS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 30.5, "CustomerChurn[TotalCharges]": 30.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6390-DSAZX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 73.6, "CustomerChurn[TotalCharges]": 73.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0388-EOPEX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.4, "CustomerChurn[TotalCharges]": 139.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5207-PLSTK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 48.75, "CustomerChurn[TotalCharges]": 48.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5201-FRKKS", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 74.3, "CustomerChurn[TotalCharges]": 1952.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7611-YKYTC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 75.0, "CustomerChurn[TotalCharges]": 1573.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0623-GDISB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 48.45, "CustomerChurn[TotalCharges]": 48.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1794-HBQTJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 48.6, "CustomerChurn[TotalCharges]": 48.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0384-RVBPI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.4, "CustomerChurn[TotalCharges]": 1398.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6620-JDYNW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 60.6, "CustomerChurn[TotalCharges]": 1156.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2045-BMBTJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 59.45, "CustomerChurn[TotalCharges]": 1884.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9842-EFSYY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 57.2, "CustomerChurn[TotalCharges]": 223.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2911-UREFD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 55.9, "CustomerChurn[TotalCharges]": 2184.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2458-EOMRE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 64.05, "CustomerChurn[TotalCharges]": 733.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9058-HRZSV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.4, "CustomerChurn[TotalCharges]": 6126.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6416-YJTTB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 79.5, "CustomerChurn[TotalCharges]": 795.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4402-FTBXC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 89.8, "CustomerChurn[TotalCharges]": 4667.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6794-HKIAJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 90.7, "CustomerChurn[TotalCharges]": 5586.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8749-JMNKX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 51, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 93.8, "CustomerChurn[TotalCharges]": 4750.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2979-SXESE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.4, "CustomerChurn[TotalCharges]": 1607.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3934-HXCFZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.25, "CustomerChurn[TotalCharges]": 2186.4, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1193-RTSLK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 83.9, "CustomerChurn[TotalCharges]": 3233.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6413-XKKPU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.4, "CustomerChurn[TotalCharges]": 1539.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6581-NQCBA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 49.95, "CustomerChurn[TotalCharges]": 810.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4307-KWMXE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 35.75, "CustomerChurn[TotalCharges]": 389.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8070-AAWZP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 34.25, "CustomerChurn[TotalCharges]": 828.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0836-SEYLU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 40.65, "CustomerChurn[TotalCharges]": 328.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5154-VEKBL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 58.5, "CustomerChurn[TotalCharges]": 539.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4439-YRNVD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 36.25, "CustomerChurn[TotalCharges]": 374.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8706-HRADD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 21, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 43.55, "CustomerChurn[TotalCharges]": 1011.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8350-NYMVI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 41.1, "CustomerChurn[TotalCharges]": 1597.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7851-FLGGQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 44.65, "CustomerChurn[TotalCharges]": 44.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4672-FOTSD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 67.25, "CustomerChurn[TotalCharges]": 832.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1702-CCFNJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 61.35, "CustomerChurn[TotalCharges]": 3169.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4981-FLTMF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 65.2, "CustomerChurn[TotalCharges]": 3687.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7925-PNRGI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 45, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 81.3, "CustomerChurn[TotalCharges]": 3541.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3137-LUPIX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 64.4, "CustomerChurn[TotalCharges]": 253.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4710-NKCAW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.4, "CustomerChurn[TotalCharges]": 316.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5898-IGSLP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.3, "CustomerChurn[TotalCharges]": 2823.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7587-AOVVU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.75, "CustomerChurn[TotalCharges]": 2793.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0487-RPVUM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 99.4, "CustomerChurn[TotalCharges]": 5943.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3143-ILDAL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.45, "CustomerChurn[TotalCharges]": 5124.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2873-ZLIWT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.85, "CustomerChurn[TotalCharges]": 3303.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1020-JPQOW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 90.55, "CustomerChurn[TotalCharges]": 5116.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7621-VPNET", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 42, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 85.9, "CustomerChurn[TotalCharges]": 3729.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8023-QHAIO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 76.85, "CustomerChurn[TotalCharges]": 4275.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9415-DPEWS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.35, "CustomerChurn[TotalCharges]": 1639.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9508-ILZDG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 96.35, "CustomerChurn[TotalCharges]": 3190.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3323-CPBWR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 23, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 96.9, "CustomerChurn[TotalCharges]": 2085.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6300-BWMJX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.35, "CustomerChurn[TotalCharges]": 5386.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6599-RCLCJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 47, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 109.55, "CustomerChurn[TotalCharges]": 5124.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7748-UMTRK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 30, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.3, "CustomerChurn[TotalCharges]": 2974.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2277-DJJDL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.0, "CustomerChurn[TotalCharges]": 6017.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6710-HSJRD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 114.1, "CustomerChurn[TotalCharges]": 7132.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2357-COQEK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 103.3, "CustomerChurn[TotalCharges]": 2890.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5569-OUICF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 28, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 101.3, "CustomerChurn[TotalCharges]": 2812.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0147-ESWWR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 39, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 101.25, "CustomerChurn[TotalCharges]": 3949.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2832-KJCRD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 103.65, "CustomerChurn[TotalCharges]": 3988.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8784-CGILN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 99.85, "CustomerChurn[TotalCharges]": 1776.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6286-ZHAOK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.55, "CustomerChurn[TotalCharges]": 507.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0484-JPBRU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 41, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.25, "CustomerChurn[TotalCharges]": 996.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2565-JSLRY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.05, "CustomerChurn[TotalCharges]": 24.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9027-YFHQJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.05, "CustomerChurn[TotalCharges]": 152.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8746-OQQRW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.25, "CustomerChurn[TotalCharges]": 101.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5018-HEKFO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.5, "CustomerChurn[TotalCharges]": 270.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7812-FZHPE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.1, "CustomerChurn[TotalCharges]": 409.9, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0568-ONFPC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.9, "CustomerChurn[TotalCharges]": 135.0, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4430-YHXGG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.45, "CustomerChurn[TotalCharges]": 84.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6258-NGCNG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 23.5, "CustomerChurn[TotalCharges]": 173.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6092-QZVPP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.2, "CustomerChurn[TotalCharges]": 2854.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2506-CLAKW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 98.15, "CustomerChurn[TotalCharges]": 567.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5141-ZUVBH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 93.0, "CustomerChurn[TotalCharges]": 870.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4673-KKSLS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 87.6, "CustomerChurn[TotalCharges]": 2724.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7277-OZCGZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.05, "CustomerChurn[TotalCharges]": 1886.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4315-MURBD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 98.9, "CustomerChurn[TotalCharges]": 1120.95, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7217-JYHOQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 70.3, "CustomerChurn[TotalCharges]": 1706.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7707-PYBBH", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 61.9, "CustomerChurn[TotalCharges]": 2647.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1394-SUIUH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 44, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.15, "CustomerChurn[TotalCharges]": 3670.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0870-VEMYL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 53.85, "CustomerChurn[TotalCharges]": 259.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4558-FANTW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 91.85, "CustomerChurn[TotalCharges]": 1574.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "8217-QYOHV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 55.75, "CustomerChurn[TotalCharges]": 266.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8731-WBBMB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 26, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 81.9, "CustomerChurn[TotalCharges]": 2078.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2344-JMOGN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 94.85, "CustomerChurn[TotalCharges]": 890.6, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7382-DFJTU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 18, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 55.2, "CustomerChurn[TotalCharges]": 1058.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8640-SDGKB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 74.4, "CustomerChurn[TotalCharges]": 299.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "0772-GYEQQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 88.35, "CustomerChurn[TotalCharges]": 262.05, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2018-PZKMU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 103.1, "CustomerChurn[TotalCharges]": 970.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3863-QSTYI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 64.65, "CustomerChurn[TotalCharges]": 3735.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0742-MOABM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.05, "CustomerChurn[TotalCharges]": 179.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7218-HKQFK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.2, "CustomerChurn[TotalCharges]": 167.5, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5522-NYKPB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 85.9, "CustomerChurn[TotalCharges]": 2199.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7742-MYPGI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 48.8, "CustomerChurn[TotalCharges]": 297.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0423-UDIJQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.2, "CustomerChurn[TotalCharges]": 447.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5701-ZIKJE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 50.55, "CustomerChurn[TotalCharges]": 610.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1213-NGCUN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 49.65, "CustomerChurn[TotalCharges]": 267.35, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "7798-JVXYM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 14, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 69.65, "CustomerChurn[TotalCharges]": 921.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9210-IAHGH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 70.75, "CustomerChurn[TotalCharges]": 450.8, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3733-ZEECP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 51.1, "CustomerChurn[TotalCharges]": 1232.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4785-NKHCX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.05, "CustomerChurn[TotalCharges]": 94.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4488-PSYCG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 20.25, "CustomerChurn[TotalCharges]": 327.45, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "1159-WFSGR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 16, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 20.4, "CustomerChurn[TotalCharges]": 321.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1925-GMVBW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.55, "CustomerChurn[TotalCharges]": 96.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8246-SHFGA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 17, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 21.1, "CustomerChurn[TotalCharges]": 385.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3097-PYWXL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 19.95, "CustomerChurn[TotalCharges]": 82.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3345-JHUEO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 20.2, "CustomerChurn[TotalCharges]": 55.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3694-GLTJM", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.65, "CustomerChurn[TotalCharges]": 92.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2428-ZMCTB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.75, "CustomerChurn[TotalCharges]": 208.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4018-KJYUY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 22, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 432.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2303-PJYHN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.85, "CustomerChurn[TotalCharges]": 52.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8457-XIGKN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 20, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 19.6, "CustomerChurn[TotalCharges]": 356.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2159-TURXX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 20.05, "CustomerChurn[TotalCharges]": 95.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6549-YMFAW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 9, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 21.25, "CustomerChurn[TotalCharges]": 204.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4946-EDSEW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 11, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.25, "CustomerChurn[TotalCharges]": 180.3, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2839-RFSQE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.65, "CustomerChurn[TotalCharges]": 38.7, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "6776-TLWOI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.85, "CustomerChurn[TotalCharges]": 64.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "4195-SMMNX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 2, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.35, "CustomerChurn[TotalCharges]": 33.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3675-YDUPJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.85, "CustomerChurn[TotalCharges]": 193.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6184-DYUOB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 3, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.6, "CustomerChurn[TotalCharges]": 55.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0594-UFTUL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.85, "CustomerChurn[TotalCharges]": 252.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0487-VVUVK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.15, "CustomerChurn[TotalCharges]": 477.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5144-PQCDZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.95, "CustomerChurn[TotalCharges]": 59.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1257-SXUXQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.45, "CustomerChurn[TotalCharges]": 86.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3012-VFFMN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 7, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.65, "CustomerChurn[TotalCharges]": 158.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1498-DQNRX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 29, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.85, "CustomerChurn[TotalCharges]": 573.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6476-EPYZR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 12, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.5, "CustomerChurn[TotalCharges]": 255.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9184-GALIL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 38, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.45, "CustomerChurn[TotalCharges]": 781.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4719-UMSIY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 6, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.65, "CustomerChurn[TotalCharges]": 100.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9046-JBFWA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 27, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.15, "CustomerChurn[TotalCharges]": 537.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1760-CAZHT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 25, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.8, "CustomerChurn[TotalCharges]": 460.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6621-YOBKI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 5, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.35, "CustomerChurn[TotalCharges]": 92.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6979-TNDEU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 8, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.2, "CustomerChurn[TotalCharges]": 156.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5222-JCXZT", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.0, "CustomerChurn[TotalCharges]": 78.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5863-OOKCL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 18.85, "CustomerChurn[TotalCharges]": 163.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6040-CGACY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 15, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.6, "CustomerChurn[TotalCharges]": 299.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4397-FRLTA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 4, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.15, "CustomerChurn[TotalCharges]": 84.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1029-QFBEN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.55, "CustomerChurn[TotalCharges]": 19.55, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "2592-YKDIF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 20.35, "CustomerChurn[TotalCharges]": 20.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8393-JMVMB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.45, "CustomerChurn[TotalCharges]": 19.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9441-QHEVC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.1, "CustomerChurn[TotalCharges]": 19.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6141-OOXUQ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 19.65, "CustomerChurn[TotalCharges]": 19.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "9318-NKNFC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 18.85, "CustomerChurn[TotalCharges]": 18.85, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3717-OFRTN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.75, "CustomerChurn[TotalCharges]": 19.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0817-HSUSE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 75.5, "CustomerChurn[TotalCharges]": 75.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2792-LSHWX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 83.4, "CustomerChurn[TotalCharges]": 83.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2468-SJFLM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 1, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Month-to-month", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 74.3, "CustomerChurn[TotalCharges]": 74.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1447-PJGGA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 95.25, "CustomerChurn[TotalCharges]": 5464.65, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "5440-FLBQG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 108.4, "CustomerChurn[TotalCharges]": 7318.2, "CustomerChurn[Churn]": true}, {"CustomerChurn[customerID]": "3841-NFECX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 96.35, "CustomerChurn[TotalCharges]": 6766.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9076-AXYIK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 64, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 102.1, "CustomerChurn[TotalCharges]": 6538.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4849-PYRLQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 73.25, "CustomerChurn[TotalCharges]": 4054.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2176-LVPNX", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 89.85, "CustomerChurn[TotalCharges]": 6293.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9220-ZNKJI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 88.8, "CustomerChurn[TotalCharges]": 4805.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2277-BKJKN", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 99.2, "CustomerChurn[TotalCharges]": 7213.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3597-YASZG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 104.45, "CustomerChurn[TotalCharges]": 7349.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7740-BTPUX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 113.6, "CustomerChurn[TotalCharges]": 6292.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4039-PIMHX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 49.8, "CustomerChurn[TotalCharges]": 2398.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4884-TVUQF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 101.3, "CustomerChurn[TotalCharges]": 5779.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1409-PHXTF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 54, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 110.45, "CustomerChurn[TotalCharges]": 6077.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0716-BQNDX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 57, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 93.75, "CustomerChurn[TotalCharges]": 5625.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1635-NZATJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.45, "CustomerChurn[TotalCharges]": 1789.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6120-RJKLU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 1, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.95, "CustomerChurn[TotalCharges]": 4819.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0621-JFHOL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 10, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 29.6, "CustomerChurn[TotalCharges]": 299.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3745-HRPHI", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 54.65, "CustomerChurn[TotalCharges]": 3632.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0458-HEUZG", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 13, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 35.4, "CustomerChurn[TotalCharges]": 450.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7665-NKLAV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 40.65, "CustomerChurn[TotalCharges]": 1547.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7274-CGTOD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 43.7, "CustomerChurn[TotalCharges]": 2618.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8039-EQPIM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 60.25, "CustomerChurn[TotalCharges]": 4055.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6762-QVYJO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 59.75, "CustomerChurn[TotalCharges]": 3624.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1194-BHJYC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 61, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 62.15, "CustomerChurn[TotalCharges]": 3778.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1209-VFFOC", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 56.4, "CustomerChurn[TotalCharges]": 3948.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2580-ASVVY", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 37, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 45.4, "CustomerChurn[TotalCharges]": 1593.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5010-IPEAQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 54.2, "CustomerChurn[TotalCharges]": 3623.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9610-WCESF", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": false, "CustomerChurn[MultipleLines]": "No phone service", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 43.9, "CustomerChurn[TotalCharges]": 3097.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9489-DEDVP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.2, "CustomerChurn[TotalCharges]": 4872.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5781-RFZRP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 73.5, "CustomerChurn[TotalCharges]": 5357.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4178-EGMON", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 88.0, "CustomerChurn[TotalCharges]": 5986.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6248-TKCQV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 80.6, "CustomerChurn[TotalCharges]": 5460.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5055-BRMNE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 106.7, "CustomerChurn[TotalCharges]": 7009.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1172-VIYBP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 69.7, "CustomerChurn[TotalCharges]": 3686.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6586-MYGKD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 76.95, "CustomerChurn[TotalCharges]": 5289.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1936-UAFEH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 110.25, "CustomerChurn[TotalCharges]": 7279.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2632-TACXW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 23.65, "CustomerChurn[TotalCharges]": 1416.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1299-AURJA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 24.7, "CustomerChurn[TotalCharges]": 1685.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5939-SXWHM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 48, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 26.3, "CustomerChurn[TotalCharges]": 1245.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2908-WGAXL", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.95, "CustomerChurn[TotalCharges]": 1468.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9668-PUGNU", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.5, "CustomerChurn[TotalCharges]": 1816.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4213-HKBJO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.7, "CustomerChurn[TotalCharges]": 826.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5220-AGAAX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 24.0, "CustomerChurn[TotalCharges]": 1664.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7008-LZVOZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.3, "CustomerChurn[TotalCharges]": 1672.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5075-JSDKI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 24.45, "CustomerChurn[TotalCharges]": 1493.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6857-TKDJV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 24.65, "CustomerChurn[TotalCharges]": 1620.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0485-ZBSLN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 24.75, "CustomerChurn[TotalCharges]": 1715.1, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1535-VTJOQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 24, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 25.15, "CustomerChurn[TotalCharges]": 553.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5115-SQAAU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 25.6, "CustomerChurn[TotalCharges]": 1673.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5322-ZSMZY", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 31, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.75, "CustomerChurn[TotalCharges]": 755.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4526-EXKKN", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 40, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.6, "CustomerChurn[TotalCharges]": 973.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7503-EPSZW", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 64, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.05, "CustomerChurn[TotalCharges]": 1559.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3213-VVOLG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 0, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.35, "CustomerChurn[TotalCharges]": null, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7608-RGIRO", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 24.4, "CustomerChurn[TotalCharges]": 1413.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8946-BFWSG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 25.25, "CustomerChurn[TotalCharges]": 1573.05, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8295-KMENE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 76.45, "CustomerChurn[TotalCharges]": 4519.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3050-RLLXC", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 56, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 81.25, "CustomerChurn[TotalCharges]": 4620.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7162-WPHPM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 71.6, "CustomerChurn[TotalCharges]": 4230.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3428-MMGUB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 89.55, "CustomerChurn[TotalCharges]": 5231.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1621-YNCJH", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 36, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 106.05, "CustomerChurn[TotalCharges]": 3834.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9570-KYEUA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 64, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 99.25, "CustomerChurn[TotalCharges]": 6549.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2649-HWLYB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 76.15, "CustomerChurn[TotalCharges]": 4929.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5855-EIBDE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 106.65, "CustomerChurn[TotalCharges]": 5174.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2927-CVULT", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 53, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 104.05, "CustomerChurn[TotalCharges]": 5566.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0771-CHWSK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.6, "CustomerChurn[TotalCharges]": 4798.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5193-QLVZB", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 104.75, "CustomerChurn[TotalCharges]": 6536.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5360-LJCNJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 105.15, "CustomerChurn[TotalCharges]": 7555.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6733-LRIZX", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 35, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 108.95, "CustomerChurn[TotalCharges]": 4025.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6308-CQRBU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 109.25, "CustomerChurn[TotalCharges]": 7707.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9530-GRMJG", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 84.1, "CustomerChurn[TotalCharges]": 5979.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3227-WLKLI", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 65, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 91.55, "CustomerChurn[TotalCharges]": 5963.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5117-ZSMHQ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 89.9, "CustomerChurn[TotalCharges]": 6342.7, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2223-GDSHL", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 116.05, "CustomerChurn[TotalCharges]": 8297.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3882-IYOIJ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 115.25, "CustomerChurn[TotalCharges]": 6758.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7929-SKFGK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "Yes", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 114.3, "CustomerChurn[TotalCharges]": 8244.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6556-DBKZF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 76.05, "CustomerChurn[TotalCharges]": 5436.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4568-KNYWR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 63.25, "CustomerChurn[TotalCharges]": 3342.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0379-DJQHR", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 67, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 81.35, "CustomerChurn[TotalCharges]": 5398.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5993-JSUWV", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 61.15, "CustomerChurn[TotalCharges]": 4017.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1303-SRDOK", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 55, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 69.05, "CustomerChurn[TotalCharges]": 3842.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6322-PJJDJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 94.8, "CustomerChurn[TotalCharges]": 4690.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9541-ZPSEA", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 80.35, "CustomerChurn[TotalCharges]": 5375.15, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8232-CTLKO", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 59.75, "CustomerChurn[TotalCharges]": 3996.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1960-UOTYM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "No", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 79.2, "CustomerChurn[TotalCharges]": 4016.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4622-YNKIJ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 33, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 88.95, "CustomerChurn[TotalCharges]": 3027.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0181-RITDD", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 62, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 108.15, "CustomerChurn[TotalCharges]": 6825.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "8216-AZUUZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 42, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 100.4, "CustomerChurn[TotalCharges]": 4303.65, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4366-CTOUZ", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 50, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 100.2, "CustomerChurn[TotalCharges]": 5038.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2599-CIPQE", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 109.3, "CustomerChurn[TotalCharges]": 7782.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "4043-MKDTV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 105.25, "CustomerChurn[TotalCharges]": 7291.75, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3374-TTZTK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 52, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Electronic check", "CustomerChurn[MonthlyCharges]": 106.3, "CustomerChurn[TotalCharges]": 5487.0, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "1414-YADCW", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 70, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 84.6, "CustomerChurn[TotalCharges]": 5706.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "6603-QWSPR", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "Fiber optic", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 104.4, "CustomerChurn[TotalCharges]": 4904.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3174-AKMAS", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 46, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.2, "CustomerChurn[TotalCharges]": 3009.5, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0604-THJFP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 59, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 75.95, "CustomerChurn[TotalCharges]": 4542.35, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0487-CRLZF", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 49, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 74.45, "CustomerChurn[TotalCharges]": 3721.9, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2661-GKBTK", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 60, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 76.95, "CustomerChurn[TotalCharges]": 4543.95, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "2256-YLYLP", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 68, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "No", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 72.95, "CustomerChurn[TotalCharges]": 4953.25, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5846-NEQVZ", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 71, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 70.85, "CustomerChurn[TotalCharges]": 4973.4, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9871-ELEYA", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 34, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 67.65, "CustomerChurn[TotalCharges]": 2339.3, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5318-YKDPV", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 43, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "No", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "Yes", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 79.15, "CustomerChurn[TotalCharges]": 3566.6, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9795-SHUHB", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 66, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "No", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 58.2, "CustomerChurn[TotalCharges]": 3810.8, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "3795-GWTRD", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 75.55, "CustomerChurn[TotalCharges]": 4707.85, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "7860-UXCRM", "CustomerChurn[gender]": "Male", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "Yes", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 74.5, "CustomerChurn[TotalCharges]": 4674.55, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "9786-YWNHU", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 63, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Mailed check", "CustomerChurn[MonthlyCharges]": 63.55, "CustomerChurn[TotalCharges]": 4014.2, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "5614-DNZCE", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": false, "CustomerChurn[Dependents]": false, "CustomerChurn[tenure]": 58, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "DSL", "CustomerChurn[OnlineSecurity]": "Yes", "CustomerChurn[OnlineBackup]": "Yes", "CustomerChurn[DeviceProtection]": "Yes", "CustomerChurn[TechSupport]": "Yes", "CustomerChurn[StreamingTV]": "No", "CustomerChurn[StreamingMovies]": "No", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": true, "CustomerChurn[PaymentMethod]": "Credit card (automatic)", "CustomerChurn[MonthlyCharges]": 64.9, "CustomerChurn[TotalCharges]": 3795.45, "CustomerChurn[Churn]": false}, {"CustomerChurn[customerID]": "0042-RLHYP", "CustomerChurn[gender]": "Female", "CustomerChurn[SeniorCitizen]": 0, "CustomerChurn[Partner]": true, "CustomerChurn[Dependents]": true, "CustomerChurn[tenure]": 69, "CustomerChurn[PhoneService]": true, "CustomerChurn[MultipleLines]": "No", "CustomerChurn[InternetService]": "No", "CustomerChurn[OnlineSecurity]": "No internet service", "CustomerChurn[OnlineBackup]": "No internet service", "CustomerChurn[DeviceProtection]": "No internet service", "CustomerChurn[TechSupport]": "No internet service", "CustomerChurn[StreamingTV]": "No internet service", "CustomerChurn[StreamingMovies]": "No internet service", "CustomerChurn[Contract]": "Two year", "CustomerChurn[PaperlessBilling]": false, "CustomerChurn[PaymentMethod]": "Bank transfer (automatic)", "CustomerChurn[MonthlyCharges]": 19.7, "CustomerChurn[TotalCharges]": 1396.9, "CustomerChurn[Churn]": false}], "stage_runningstate": "executed"}, {"_id": "649c00cae61a96675bcdf6dd", "mode": "staged", "originalfile": "/FileStore/platform/extra/tempFile1687945407.csv", "in": ["649c00cae61a96675bcdf6dc"], "out": [], "is_streaming": false, "valid": false, "is_predefined": false, "cache": false, "name": "CustomerChurn_AutoML", "comment": "", "pipeline_id": "649c00cae61a96675bcdf6d8", "sub_type": "Automl", "stage_type": "ml", "mlCategory": "Classification", "stage_attributes": {"model_type": "classification", "label": "CustomerChurn[Churn]", "optimizeBy": "accuracy", "features": ["CustomerChurn[SeniorCitizen]", "CustomerChurn[Partner]", "CustomerChurn[Dependents]", "CustomerChurn[tenure]", "CustomerChurn[PhoneService]", "CustomerChurn[PaperlessBilling]", "CustomerChurn[MonthlyCharges]", "CustomerChurn[TotalCharges]", "CustomerChurn[customerID]_stringindexer", "CustomerChurn[gender]_stringindexer", "CustomerChurn[MultipleLines]_stringindexer", "CustomerChurn[InternetService]_stringindexer", "CustomerChurn[OnlineSecurity]_stringindexer", "CustomerChurn[OnlineBackup]_stringindexer", "CustomerChurn[DeviceProtection]_stringindexer", "CustomerChurn[TechSupport]_stringindexer", "CustomerChurn[StreamingTV]_stringindexer", "CustomerChurn[StreamingMovies]_stringindexer", "CustomerChurn[Contract]_stringindexer", "CustomerChurn[PaymentMethod]_stringindexer"], "percentage": "100", "executionTime": "10", "sampling_value": "", "paascall": 1, "run_id": "", "sampling": 0}, "status": "new", "position": {"x": 187, "y": 160}, "shape_attributes": {"image": {"refWidth": "100%", "refHeight": "100%", "xlinkHref": "assets/svg/ml-engine/classification.svg"}, "label": {"textVerticalAnchor": "top", "textAnchor": "middle", "refX": "50%", "refY": "100%", "refY2": 10, "fontSize": 10, "fill": "#333333", "type": "aml", "text": "Classification-AutoML", "slug": "auto-ml", "fontFamily": "Roboto Condensed", "fontWeight": "Normal"}, "root": {"dataTooltipPosition": "bottom", "dataTooltipPositionSelector": ".joint-stencil", "mode": "auto"}, "body": {"fill": "transparent", "stroke": "#4295d1", "strokeWidth": 2, "strokeDasharray": "0"}, "dbValues": {"model_type": "", "label": "", "features": []}}, "shape_size": {"width": 60, "height": 60}, "shape_type": "standard.Image", "user_id": "3728edb5-ec63-468b-9cf0-eca3719e7fe5", "original_schema": [{"inherited": true, "checked": true, "field": "CustomerChurn[SeniorCitizen]", "alias": "CustomerChurn[SeniorCitizen]", "type": "numeric", "position": 0}, {"inherited": true, "checked": true, "field": "CustomerChurn[Partner]", "alias": "CustomerChurn[Partner]", "type": "numeric", "position": 1}, {"inherited": true, "checked": true, "field": "CustomerChurn[Dependents]", "alias": "CustomerChurn[Dependents]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "CustomerChurn[tenure]", "alias": "CustomerChurn[tenure]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "CustomerChurn[PhoneService]", "alias": "CustomerChurn[PhoneService]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaperlessBilling]", "alias": "CustomerChurn[PaperlessBilling]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "CustomerChurn[MonthlyCharges]", "alias": "CustomerChurn[MonthlyCharges]", "type": "real", "position": 6}, {"inherited": true, "checked": true, "field": "CustomerChurn[TotalCharges]", "alias": "CustomerChurn[TotalCharges]", "type": "real", "position": 7}, {"inherited": true, "checked": true, "field": "CustomerChurn[Churn]", "alias": "CustomerChurn[Churn]", "type": "numeric", "position": 8}, {"inherited": true, "checked": true, "field": "CustomerChurn[customerID]_stringindexer", "alias": "CustomerChurn[customerID]_stringindexer", "type": "real", "position": 9}, {"inherited": true, "checked": true, "field": "CustomerChurn[gender]_stringindexer", "alias": "CustomerChurn[gender]_stringindexer", "type": "numeric", "position": 10}, {"inherited": true, "checked": true, "field": "CustomerChurn[MultipleLines]_stringindexer", "alias": "CustomerChurn[MultipleLines]_stringindexer", "type": "numeric", "position": 11}, {"inherited": true, "checked": true, "field": "CustomerChurn[InternetService]_stringindexer", "alias": "CustomerChurn[InternetService]_stringindexer", "type": "numeric", "position": 12}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineSecurity]_stringindexer", "alias": "CustomerChurn[OnlineSecurity]_stringindexer", "type": "numeric", "position": 13}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineBackup]_stringindexer", "alias": "CustomerChurn[OnlineBackup]_stringindexer", "type": "numeric", "position": 14}, {"inherited": true, "checked": true, "field": "CustomerChurn[DeviceProtection]_stringindexer", "alias": "CustomerChurn[DeviceProtection]_stringindexer", "type": "numeric", "position": 15}, {"inherited": true, "checked": true, "field": "CustomerChurn[TechSupport]_stringindexer", "alias": "CustomerChurn[TechSupport]_stringindexer", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingTV]_stringindexer", "alias": "CustomerChurn[StreamingTV]_stringindexer", "type": "numeric", "position": 17}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingMovies]_stringindexer", "alias": "CustomerChurn[StreamingMovies]_stringindexer", "type": "numeric", "position": 18}, {"inherited": true, "checked": true, "field": "CustomerChurn[Contract]_stringindexer", "alias": "CustomerChurn[Contract]_stringindexer", "type": "numeric", "position": 19}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaymentMethod]_stringindexer", "alias": "CustomerChurn[PaymentMethod]_stringindexer", "type": "numeric", "position": 20}], "actual_schema": [{"inherited": true, "checked": true, "field": "CustomerChurn[customerID]", "alias": "CustomerChurn[customerID]", "type": "String", "position": 0}, {"inherited": true, "checked": true, "field": "CustomerChurn[gender]", "alias": "CustomerChurn[gender]", "type": "String", "position": 1}, {"inherited": true, "checked": true, "field": "CustomerChurn[SeniorCitizen]", "alias": "CustomerChurn[SeniorCitizen]", "type": "numeric", "position": 2}, {"inherited": true, "checked": true, "field": "CustomerChurn[Partner]", "alias": "CustomerChurn[Partner]", "type": "numeric", "position": 3}, {"inherited": true, "checked": true, "field": "CustomerChurn[Dependents]", "alias": "CustomerChurn[Dependents]", "type": "numeric", "position": 4}, {"inherited": true, "checked": true, "field": "CustomerChurn[tenure]", "alias": "CustomerChurn[tenure]", "type": "numeric", "position": 5}, {"inherited": true, "checked": true, "field": "CustomerChurn[PhoneService]", "alias": "CustomerChurn[PhoneService]", "type": "numeric", "position": 6}, {"inherited": true, "checked": true, "field": "CustomerChurn[MultipleLines]", "alias": "CustomerChurn[MultipleLines]", "type": "String", "position": 7}, {"inherited": true, "checked": true, "field": "CustomerChurn[InternetService]", "alias": "CustomerChurn[InternetService]", "type": "String", "position": 8}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineSecurity]", "alias": "CustomerChurn[OnlineSecurity]", "type": "String", "position": 9}, {"inherited": true, "checked": true, "field": "CustomerChurn[OnlineBackup]", "alias": "CustomerChurn[OnlineBackup]", "type": "String", "position": 10}, {"inherited": true, "checked": true, "field": "CustomerChurn[DeviceProtection]", "alias": "CustomerChurn[DeviceProtection]", "type": "String", "position": 11}, {"inherited": true, "checked": true, "field": "CustomerChurn[TechSupport]", "alias": "CustomerChurn[TechSupport]", "type": "String", "position": 12}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingTV]", "alias": "CustomerChurn[StreamingTV]", "type": "String", "position": 13}, {"inherited": true, "checked": true, "field": "CustomerChurn[StreamingMovies]", "alias": "CustomerChurn[StreamingMovies]", "type": "String", "position": 14}, {"inherited": true, "checked": true, "field": "CustomerChurn[Contract]", "alias": "CustomerChurn[Contract]", "type": "String", "position": 15}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaperlessBilling]", "alias": "CustomerChurn[PaperlessBilling]", "type": "numeric", "position": 16}, {"inherited": true, "checked": true, "field": "CustomerChurn[PaymentMethod]", "alias": "CustomerChurn[PaymentMethod]", "type": "String", "position": 17}, {"inherited": true, "checked": true, "field": "CustomerChurn[MonthlyCharges]", "alias": "CustomerChurn[MonthlyCharges]", "type": "real", "position": 18}, {"inherited": true, "checked": true, "field": "CustomerChurn[TotalCharges]", "alias": "CustomerChurn[TotalCharges]", "type": "real", "position": 19}, {"inherited": true, "checked": true, "field": "CustomerChurn[Churn]", "alias": "CustomerChurn[Churn]", "type": "numeric", "position": 20}], "selected_schema": [], "created_at": "2023-06-28 09:43:38.336000", "originalcount": 7043, "samplecount": 500, "samplefile": "/FileStore/platform/sampleData/649c00cae61a96675bcdf6db/part-00000-07d57ccd-efa2-48cc-b41b-5c4c427080d9-c000.csv", "joinSchema": [], "updated_at": "2023-06-28 09:43:38.404000", "__v": 0, "stage_runningstate": "executed", "after_run": {"baseType": "hdfs", "notify": "True", "pipeline_type": "simple", "retrain": "0", "schedule": "0", "scheduleInfo": ""}}]